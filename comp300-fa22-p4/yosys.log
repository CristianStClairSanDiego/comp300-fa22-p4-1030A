
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.19+14 (git sha1 2326b9f90, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `top.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Parsing `ice40up5k_spram.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: ice40up5k_spram.v
Parsing Verilog input from `ice40up5k_spram.v' to AST representation.
Storing AST representation for module `$abstract\ice40up5k_spram'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Storing AST representation for module `$abstract\spimemio'.
Storing AST representation for module `$abstract\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Storing AST representation for module `$abstract\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Storing AST representation for module `$abstract\picosoc'.
Storing AST representation for module `$abstract\picosoc_regs'.
Storing AST representation for module `$abstract\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Storing AST representation for module `$abstract\picorv32'.
Storing AST representation for module `$abstract\picorv32_regs'.
Storing AST representation for module `$abstract\picorv32_pcpi_mul'.
Storing AST representation for module `$abstract\picorv32_pcpi_fast_mul'.
Storing AST representation for module `$abstract\picorv32_pcpi_div'.
Storing AST representation for module `$abstract\picorv32_axi'.
Storing AST representation for module `$abstract\picorv32_axi_adapter'.
Storing AST representation for module `$abstract\picorv32_wb'.
Successfully finished Verilog frontend.

-- Parsing `display.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: display.v
Parsing Verilog input from `display.v' to AST representation.
Storing AST representation for module `$abstract\display'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json hardware.json' --

8. Executing SYNTH_ICE40 pass.

8.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

8.2. Executing HIERARCHY pass (managing design hierarchy).

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

8.3.1. Analyzing design hierarchy..
Top module:  \top
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 2048

8.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 2048
Generating RTLIL representation for module `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc'.

8.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\display'.
Generating RTLIL representation for module `\display'.

8.3.4. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:     \display
Parameter \WORDS = 2048

8.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 2048
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000'.

8.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\simpleuart'.
Generating RTLIL representation for module `\simpleuart'.

8.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\spimemio'.
Generating RTLIL representation for module `\spimemio'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 8192

8.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 8192
Generating RTLIL representation for module `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32'.

8.3.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000
Used module:         \simpleuart
Used module:         \spimemio
Used module:         $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32
Used module:     \display

8.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\spimemio_xfer'.
Generating RTLIL representation for module `\spimemio_xfer'.

8.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_regs'.

8.3.12. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32
Used module:             \picosoc_regs
Used module:     \display

8.3.13. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32
Used module:             \picosoc_regs
Used module:     \display
Removing unused module `$abstract\display'.
Removing unused module `$abstract\picorv32_wb'.
Removing unused module `$abstract\picorv32_axi_adapter'.
Removing unused module `$abstract\picorv32_axi'.
Removing unused module `$abstract\picorv32_pcpi_div'.
Removing unused module `$abstract\picorv32_pcpi_fast_mul'.
Removing unused module `$abstract\picorv32_pcpi_mul'.
Removing unused module `$abstract\picorv32_regs'.
Removing unused module `$abstract\picorv32'.
Removing unused module `$abstract\picosoc_mem'.
Removing unused module `$abstract\picosoc_regs'.
Removing unused module `$abstract\picosoc'.
Removing unused module `$abstract\simpleuart'.
Removing unused module `$abstract\spimemio_xfer'.
Removing unused module `$abstract\spimemio'.
Removing unused module `$abstract\ice40up5k_spram'.
Removing unused module `$abstract\top'.
Removed 17 unused modules.

8.4. Executing PROC pass (convert processes to netlists).

8.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
Found and cleaned up 1 empty switch in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
Found and cleaned up 6 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:546$668'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:546$668'.
Cleaned up 23 empty switches.

8.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$236 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$225 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$222 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$219 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$216 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$213 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$198 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$187 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$184 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$181 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$178 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$175 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$picosoc.v:233$1269 in module picosoc_regs.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$1252 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$1228 in module spimemio_xfer.
Marked 37 switch rules as full_case in process $proc$picorv32.v:1397$1036 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1304$1008 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1290$1003 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1181$968 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:856$708 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:807$706 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:776$702 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:700$701 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:565$677 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:430$639 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:401$636 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:401$636 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:390$631 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:325$557 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$523 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$501 in module spimemio.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$481 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$472 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$470 in module simpleuart.
Removed 3 dead cases from process $proc$display.v:114$456 in module display.
Marked 4 switch rules as full_case in process $proc$display.v:114$456 in module display.
Removed 1 dead cases from process $proc$display.v:100$455 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:100$455 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:87$452 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:53$448 in module display.
Marked 1 switch rules as full_case in process $proc$top.v:129$392 in module top.
Removed a total of 6 dead cases.

8.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 15 redundant assignments.
Promoted 120 assignments to connections.

8.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\display.$proc$display.v:0$459'.
  Set init value: \refresh_timer_state = 24'000000000000111100000000
  Set init value: \refresh_tick = 1'1
Found init rule in `\display.$proc$display.v:69$458'.
  Set init value: \dd = 2'11
Found init rule in `\display.$proc$display.v:0$457'.
  Set init value: \second_toggle = 1'1
  Set init value: \second_timer_state = 24'101101110001101011111111
Found init rule in `\top.$proc$top.v:60$402'.
  Set init value: \reset_cnt = 6'000000

8.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$222'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$216'.
Found async reset \S in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205'.
Found async reset \R in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194'.
Found async reset \S in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$184'.
Found async reset \R in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$178'.

8.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~276 debug messages>

8.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$236'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$225'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$222'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$216'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$209'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$198'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$187'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$184'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$181'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$178'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$175'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:233$1269'.
     1/3: $1$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1275
     2/3: $1$memwr$\regs$picosoc.v:234$1268_DATA[31:0]$1274
     3/3: $1$memwr$\regs$picosoc.v:234$1268_ADDR[4:0]$1273
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\xfer_ddr[0:0]
    11/14: $0\xfer_dspi[0:0]
    12/14: $0\obuffer[7:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$1219'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
     1/82: $20\next_irq_pending[2:2]
     2/82: $19\next_irq_pending[2:2]
     3/82: $18\next_irq_pending[2:2]
     4/82: $17\next_irq_pending[2:2]
     5/82: $16\next_irq_pending[2:2]
     6/82: $15\next_irq_pending[2:2]
     7/82: $14\next_irq_pending[2:2]
     8/82: $13\next_irq_pending[0:0]
     9/82: $12\next_irq_pending[0:0]
    10/82: $11\next_irq_pending[31:0] [0]
    11/82: $11\next_irq_pending[31:0] [31:1]
    12/82: $2\next_irq_pending[31:0] [31:2]
    13/82: $3\set_mem_do_rdata[0:0]
    14/82: $2\next_irq_pending[31:0] [1]
    15/82: $3\set_mem_do_wdata[0:0]
    16/82: $2\next_irq_pending[31:0] [0]
    17/82: $4\set_mem_do_rinst[0:0]
    18/82: $3\set_mem_do_rinst[0:0]
    19/82: $4\set_mem_do_wdata[0:0]
    20/82: $9\next_irq_pending[1:1]
    21/82: $8\next_irq_pending[1:1]
    22/82: $7\next_irq_pending[1:1]
    23/82: $4\set_mem_do_rdata[0:0]
    24/82: $5\next_irq_pending[1:1]
    25/82: $4\next_irq_pending[1:1]
    26/82: $10\next_irq_pending[1:1]
    27/82: $5\set_mem_do_rinst[0:0]
    28/82: $6\next_irq_pending[1:1]
    29/82: $3\next_irq_pending[31:0]
    30/82: $3\current_pc[31:0]
    31/82: $2\current_pc[31:0]
    32/82: $2\set_mem_do_wdata[0:0]
    33/82: $2\set_mem_do_rdata[0:0]
    34/82: $2\set_mem_do_rinst[0:0]
    35/82: $1\next_irq_pending[31:0]
    36/82: $1\current_pc[31:0]
    37/82: $1\set_mem_do_wdata[0:0]
    38/82: $1\set_mem_do_rdata[0:0]
    39/82: $1\set_mem_do_rinst[0:0]
    40/82: $0\trace_data[35:0]
    41/82: $0\count_cycle[63:0]
    42/82: $0\trace_valid[0:0]
    43/82: $0\do_waitirq[0:0]
    44/82: $0\decoder_pseudo_trigger[0:0]
    45/82: $0\decoder_trigger[0:0]
    46/82: $0\alu_wait_2[0:0]
    47/82: $0\alu_wait[0:0]
    48/82: $0\reg_out[31:0]
    49/82: $0\reg_sh[4:0]
    50/82: $0\trap[0:0]
    51/82: $0\pcpi_timeout[0:0]
    52/82: $0\latched_rd[4:0]
    53/82: $0\latched_is_lb[0:0]
    54/82: $0\latched_is_lh[0:0]
    55/82: $0\latched_is_lu[0:0]
    56/82: $0\latched_trace[0:0]
    57/82: $0\latched_compr[0:0]
    58/82: $0\latched_branch[0:0]
    59/82: $0\latched_stalu[0:0]
    60/82: $0\latched_store[0:0]
    61/82: $0\irq_state[1:0]
    62/82: $0\cpu_state[7:0]
    63/82: $0\dbg_rs2val_valid[0:0]
    64/82: $0\dbg_rs1val_valid[0:0]
    65/82: $0\dbg_rs2val[31:0]
    66/82: $0\dbg_rs1val[31:0]
    67/82: $0\mem_do_wdata[0:0]
    68/82: $0\mem_do_rdata[0:0]
    69/82: $0\mem_do_rinst[0:0]
    70/82: $0\mem_do_prefetch[0:0]
    71/82: $0\mem_wordsize[1:0]
    72/82: $0\timer[31:0]
    73/82: $0\irq_mask[31:0]
    74/82: $0\irq_active[0:0]
    75/82: $0\irq_delay[0:0]
    76/82: $0\reg_op2[31:0]
    77/82: $0\reg_op1[31:0]
    78/82: $0\reg_next_pc[31:0]
    79/82: $0\reg_pc[31:0]
    80/82: $0\count_instr[63:0]
    81/82: $0\eoi[31:0]
    82/82: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$1008'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$1003'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$1002'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$980'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$968'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_j[31:0] [10]
     3/76: $0\decoded_imm_j[31:0] [7]
     4/76: $0\decoded_imm_j[31:0] [6]
     5/76: $0\decoded_imm_j[31:0] [3:1]
     6/76: $0\decoded_imm_j[31:0] [5]
     7/76: $0\decoded_imm_j[31:0] [9:8]
     8/76: $0\decoded_imm_j[31:0] [31:20]
     9/76: $0\decoded_imm_j[31:0] [4]
    10/76: $0\decoded_imm_j[31:0] [11]
    11/76: $0\decoded_imm_j[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_j[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$701'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$639'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$631'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:207$523'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$505'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$501'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$481'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$472'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$470'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\display.$proc$display.v:0$459'.
Creating decoders for process `\display.$proc$display.v:69$458'.
Creating decoders for process `\display.$proc$display.v:0$457'.
Creating decoders for process `\display.$proc$display.v:114$456'.
     1/4: $1\seg[6:0]
     2/4: $1\hex_to_display[3:0]
     3/4: $1\xtra[0:0]
     4/4: $1\comm[3:0]
Creating decoders for process `\display.$proc$display.v:100$455'.
     1/1: $1\dd[1:0]
Creating decoders for process `\display.$proc$display.v:87$452'.
     1/2: $1\refresh_tick[0:0]
     2/2: $1\refresh_timer_state[23:0]
Creating decoders for process `\display.$proc$display.v:53$448'.
     1/2: $1\second_toggle[0:0]
     2/2: $1\second_timer_state[23:0]
Creating decoders for process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$436'.
Creating decoders for process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$403'.
Creating decoders for process `\top.$proc$top.v:60$402'.
Creating decoders for process `\top.$proc$top.v:129$392'.
     1/6: $0\gpio_out[31:0] [31:24]
     2/6: $0\gpio_out[31:0] [23:16]
     3/6: $0\gpio_out[31:0] [15:8]
     4/6: $0\gpio_out[31:0] [7:0]
     5/6: $0\iomem_rdata[31:0]
     6/6: $0\iomem_ready[0:0]
Creating decoders for process `\top.$proc$top.v:63$384'.

8.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$1228'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_rs1' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_rs2' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_write' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$1008'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_wrdata' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$1008'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\clear_prefetched_high_word' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$1003'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$980'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_0' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$980'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_ascii_state' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$968'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_opcode' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_ascii_instr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_imm' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rs1' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rs2' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rd' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\new_ascii_instr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$701'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_add_sub' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_shl' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_shr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_eq' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_ltu' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_lts' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_wdata' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_wstrb' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_rdata_word' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_wr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_rd' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_wait' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_ready' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
No latch inferred for signal `\display.\comm' from process `\display.$proc$display.v:114$456'.
No latch inferred for signal `\display.\xtra' from process `\display.$proc$display.v:114$456'.
No latch inferred for signal `\display.\seg' from process `\display.$proc$display.v:114$456'.
No latch inferred for signal `\display.\hex_to_display' from process `\display.$proc$display.v:114$456'.
No latch inferred for signal `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.\irq' from process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$403'.

8.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243'.
  created $adff cell `$procdff$4911' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$236'.
  created $dff cell `$procdff$4912' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232'.
  created $adff cell `$procdff$4913' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$225'.
  created $dff cell `$procdff$4914' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$222'.
  created $adff cell `$procdff$4915' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$219'.
  created $dff cell `$procdff$4916' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$216'.
  created $adff cell `$procdff$4917' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$213'.
  created $dff cell `$procdff$4918' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$211'.
  created $dff cell `$procdff$4919' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$209'.
  created $dff cell `$procdff$4920' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205'.
  created $adff cell `$procdff$4921' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$198'.
  created $dff cell `$procdff$4922' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194'.
  created $adff cell `$procdff$4923' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$187'.
  created $dff cell `$procdff$4924' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$184'.
  created $adff cell `$procdff$4925' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$181'.
  created $dff cell `$procdff$4926' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$178'.
  created $adff cell `$procdff$4927' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$175'.
  created $dff cell `$procdff$4928' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$173'.
  created $dff cell `$procdff$4929' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
  created $dff cell `$procdff$4930' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$1268_ADDR' using process `\picosoc_regs.$proc$picosoc.v:233$1269'.
  created $dff cell `$procdff$4931' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$1268_DATA' using process `\picosoc_regs.$proc$picosoc.v:233$1269'.
  created $dff cell `$procdff$4932' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$1268_EN' using process `\picosoc_regs.$proc$picosoc.v:233$1269'.
  created $dff cell `$procdff$4933' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4934' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4935' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4936' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4937' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4938' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4939' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4940' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4941' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4942' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4943' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4944' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4945' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4946' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$1252'.
  created $dff cell `$procdff$4947' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$1219'.
  created $dff cell `$procdff$4948' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$1219'.
  created $dff cell `$procdff$4949' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trap' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4950' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4951' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\eoi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4952' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trace_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4953' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trace_data' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4954' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\count_cycle' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4955' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\count_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4956' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4957' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_next_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4958' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_op1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4959' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_op2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4960' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_out' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4961' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_sh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4962' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_delay' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4963' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_active' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4964' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_mask' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4965' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_pending' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4966' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\timer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4967' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wordsize' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4968' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_prefetch' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4969' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_rinst' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4970' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_rdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4971' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4972' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_trigger' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4973' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_trigger_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4974' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_pseudo_trigger' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4975' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4976' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs1val' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4977' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs2val' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4978' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs1val_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4979' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs2val_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4980' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpu_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4981' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4982' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_rinst' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4983' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_rdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4984' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4985' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_store' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4986' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_stalu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4987' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_branch' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4988' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_compr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4989' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_trace' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4990' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4991' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4992' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4993' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4994' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\current_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4995' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_timeout' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4996' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\next_irq_pending' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4997' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\do_waitirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4998' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$4999' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_0_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$5000' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_wait' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$5001' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_wait_2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
  created $dff cell `$procdff$5002' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\clear_prefetched_high_word_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$1002'.
  created $dff cell `$procdff$5003' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_insn' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5004' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lui' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5005' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_auipc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5006' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_jal' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5007' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_jalr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5008' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_beq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5009' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bne' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5010' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_blt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5011' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bge' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5012' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5013' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bgeu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5014' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5015' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5016' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5017' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lbu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5018' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lhu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5019' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5020' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5021' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5022' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_addi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5023' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slti' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5024' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sltiu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5025' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_xori' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5026' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_ori' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5027' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_andi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5028' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slli' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5029' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srli' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5030' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srai' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5031' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_add' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5032' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sub' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5033' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sll' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5034' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5035' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5036' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_xor' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5037' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srl' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5038' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sra' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5039' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_or' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5040' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_and' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5041' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdcycle' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5042' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdcycleh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5043' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdinstr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5044' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdinstrh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5045' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_ecall_ebreak' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5046' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_getq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5047' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_setq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5048' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_retirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5049' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_maskirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5050' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_waitirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5051' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_timer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5052' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5053' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5054' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5055' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5056' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_imm_j' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5057' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\compressed_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5058' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lui_auipc_jal' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5059' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5060' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_slli_srli_srai' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5061' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5062' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sb_sh_sw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5063' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sll_srl_sra' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5064' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5065' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_slti_blt_slt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5066' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5067' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5068' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lbu_lhu_lw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5069' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_alu_reg_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5070' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_alu_reg_reg' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5071' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_compare' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
  created $dff cell `$procdff$5072' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_addr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5073' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_ascii_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5074' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5075' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5076' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5077' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5078' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5079' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_next' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5080' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_valid_insn' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5081' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_ascii_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5082' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5083' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5084' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5085' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5086' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
  created $dff cell `$procdff$5087' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5088' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5089' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_addr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5090' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5091' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wstrb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5092' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5093' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_secondword' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5094' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\prefetched_high_word' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5095' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_16bit_buffer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
  created $dff cell `$procdff$5096' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\next_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$639'.
  created $dff cell `$procdff$5097' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_rdata_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$639'.
  created $dff cell `$procdff$5098' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_firstword_reg' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$631'.
  created $dff cell `$procdff$5099' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\last_mem_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$631'.
  created $dff cell `$procdff$5100' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5101' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5102' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5103' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5104' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5105' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5106' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5107' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5108' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5109' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5110' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5111' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5112' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5113' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5114' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$523'.
  created $dff cell `$procdff$5115' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$505'.
  created $dff cell `$procdff$5116' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$505'.
  created $dff cell `$procdff$5117' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$505'.
  created $dff cell `$procdff$5118' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$505'.
  created $dff cell `$procdff$5119' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5120' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5121' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5122' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5123' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5124' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5125' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5126' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5127' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5128' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$501'.
  created $dff cell `$procdff$5129' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$481'.
  created $dff cell `$procdff$5130' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$481'.
  created $dff cell `$procdff$5131' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$481'.
  created $dff cell `$procdff$5132' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$481'.
  created $dff cell `$procdff$5133' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$472'.
  created $dff cell `$procdff$5134' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$472'.
  created $dff cell `$procdff$5135' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$472'.
  created $dff cell `$procdff$5136' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$472'.
  created $dff cell `$procdff$5137' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$472'.
  created $dff cell `$procdff$5138' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$470'.
  created $dff cell `$procdff$5139' with positive edge clock.
Creating register for signal `\display.\dd' using process `\display.$proc$display.v:100$455'.
  created $dff cell `$procdff$5140' with positive edge clock.
Creating register for signal `\display.\refresh_timer_state' using process `\display.$proc$display.v:87$452'.
  created $dff cell `$procdff$5141' with positive edge clock.
Creating register for signal `\display.\refresh_tick' using process `\display.$proc$display.v:87$452'.
  created $dff cell `$procdff$5142' with positive edge clock.
Creating register for signal `\display.\second_toggle' using process `\display.$proc$display.v:53$448'.
  created $dff cell `$procdff$5143' with positive edge clock.
Creating register for signal `\display.\second_timer_state' using process `\display.$proc$display.v:53$448'.
  created $dff cell `$procdff$5144' with positive edge clock.
Creating register for signal `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.\ram_ready' using process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$436'.
  created $dff cell `$procdff$5145' with positive edge clock.
Creating register for signal `\top.\iomem_ready' using process `\top.$proc$top.v:129$392'.
  created $dff cell `$procdff$5146' with positive edge clock.
Creating register for signal `\top.\iomem_rdata' using process `\top.$proc$top.v:129$392'.
  created $dff cell `$procdff$5147' with positive edge clock.
Creating register for signal `\top.\gpio_out' using process `\top.$proc$top.v:129$392'.
  created $dff cell `$procdff$5148' with positive edge clock.
Creating register for signal `\top.\reset_cnt' using process `\top.$proc$top.v:63$384'.
  created $dff cell `$procdff$5149' with positive edge clock.

8.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243'.
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$243'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$236'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$236'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$232'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$225'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$225'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$222'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$219'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$219'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$216'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$213'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$213'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$211'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$211'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$209'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$205'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$198'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$198'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$194'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$187'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$187'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$184'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$181'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$181'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$178'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$175'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$175'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$173'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$173'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:233$1269'.
Removing empty process `picosoc_regs.$proc$picosoc.v:233$1269'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$1252'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$1252'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$1228'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$1228'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$1219'.
Found and cleaned up 56 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$1036'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$1022'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$1008'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$1008'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$1003'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$1003'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$1002'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$980'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$980'.
Found and cleaned up 8 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$968'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$968'.
Found and cleaned up 22 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$708'.
Found and cleaned up 3 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$706'.
Found and cleaned up 5 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$702'.
Found and cleaned up 47 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$701'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$701'.
Found and cleaned up 16 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$677'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$1208'.
Found and cleaned up 19 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$639'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$639'.
Found and cleaned up 3 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$636'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$631'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$631'.
Found and cleaned up 1 empty switch in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$557'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$523'.
Removing empty process `spimemio.$proc$spimemio.v:207$523'.
Removing empty process `spimemio.$proc$spimemio.v:151$505'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$501'.
Removing empty process `spimemio.$proc$spimemio.v:99$501'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$481'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$481'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$472'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$472'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$470'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$470'.
Removing empty process `display.$proc$display.v:0$459'.
Removing empty process `display.$proc$display.v:69$458'.
Removing empty process `display.$proc$display.v:0$457'.
Found and cleaned up 4 empty switches in `\display.$proc$display.v:114$456'.
Removing empty process `display.$proc$display.v:114$456'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:100$455'.
Removing empty process `display.$proc$display.v:100$455'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:87$452'.
Removing empty process `display.$proc$display.v:87$452'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:53$448'.
Removing empty process `display.$proc$display.v:53$448'.
Removing empty process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$436'.
Removing empty process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$403'.
Removing empty process `top.$proc$top.v:60$402'.
Found and cleaned up 7 empty switches in `\top.$proc$top.v:129$392'.
Removing empty process `top.$proc$top.v:129$392'.
Removing empty process `top.$proc$top.v:63$384'.
Cleaned up 277 empty switches.

8.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module picosoc_regs.
Optimizing module spimemio_xfer.
<suppressed ~33 debug messages>
Optimizing module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
<suppressed ~631 debug messages>
Optimizing module spimemio.
<suppressed ~15 debug messages>
Optimizing module simpleuart.
<suppressed ~17 debug messages>
Optimizing module $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000.
Optimizing module display.
<suppressed ~5 debug messages>
Optimizing module $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.
Optimizing module top.
<suppressed ~10 debug messages>

8.5. Executing FLATTEN pass (flatten design).
Deleting now unused module picosoc_regs.
Deleting now unused module spimemio_xfer.
Deleting now unused module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Deleting now unused module spimemio.
Deleting now unused module simpleuart.
Deleting now unused module $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000.
Deleting now unused module display.
Deleting now unused module $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.
<suppressed ~8 debug messages>

8.6. Executing TRIBUF pass.

8.7. Executing DEMINOUT pass (demote inout ports to input or output).

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

8.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 287 unused cells and 2071 unused wires.
<suppressed ~350 debug messages>

8.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

8.11. Executing OPT pass (performing simple optimizations).

8.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1662 debug messages>
Removed a total of 554 cells.

8.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1682.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1692.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1694.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1700.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1707.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1709.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1715.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1724.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1744.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1750.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1753.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1766.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1773.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1776.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1789.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1801.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1804.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1813.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1816.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1824.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1826.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1829.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1880.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1883.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1890.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1892.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1895.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1914.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1916.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1919.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1940.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1943.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1977.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1982.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$1985.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2007.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2009.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2012.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2024.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2027.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2070.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2083.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2096.
    dead port 4/7 on $pmux $flatten\soc.\cpu.$procmux$2323.
    dead port 5/7 on $pmux $flatten\soc.\cpu.$procmux$2323.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$2363.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$2363.
    dead port 4/7 on $pmux $flatten\soc.\cpu.$procmux$2568.
    dead port 5/7 on $pmux $flatten\soc.\cpu.$procmux$2568.
    dead port 3/4 on $pmux $flatten\soc.\cpu.$procmux$2632.
    dead port 1/2 on $mux $flatten\soc.\cpu.$procmux$2637.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2637.
    dead port 1/2 on $mux $flatten\soc.\cpu.$procmux$2639.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2639.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$2651.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$2651.
    dead port 3/4 on $pmux $flatten\soc.\cpu.$procmux$2833.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$2849.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$2849.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$3032.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$3032.
    dead port 4/9 on $pmux $flatten\soc.\cpu.$procmux$3085.
    dead port 5/9 on $pmux $flatten\soc.\cpu.$procmux$3085.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3207.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3216.
    dead port 1/8 on $pmux $flatten\soc.\cpu.$procmux$3231.
    dead port 2/8 on $pmux $flatten\soc.\cpu.$procmux$3231.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$4362.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$4369.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1440.
    dead port 1/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1442.
    dead port 2/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1442.
    dead port 3/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1442.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1446.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1453.
    dead port 1/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1455.
    dead port 2/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1455.
    dead port 3/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$1455.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1459.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1479.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1481.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1490.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1492.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1514.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1516.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1526.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1528.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1538.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1548.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1558.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1568.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1578.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1588.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1596.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1604.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1612.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1620.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1630.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$1640.
Removed 99 multiplexer ports.
<suppressed ~263 debug messages>

8.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$1779: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $auto$opt_reduce.cc:134:opt_pmux$5152 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2060: { $flatten\soc.\cpu.$procmux$1736_CMP $auto$opt_reduce.cc:134:opt_pmux$5154 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2073: { $auto$opt_reduce.cc:134:opt_pmux$5156 $flatten\soc.\cpu.$procmux$1735_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2086: { $flatten\soc.\cpu.$procmux$1738_CMP $auto$opt_reduce.cc:134:opt_pmux$5158 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2303: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1740_CMP $flatten\soc.\cpu.$procmux$1738_CMP $flatten\soc.\cpu.$procmux$1737_CMP $flatten\soc.\cpu.$procmux$1735_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2363: { \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_pmux$5160 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2405: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1738_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2545: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1740_CMP $flatten\soc.\cpu.$procmux$1738_CMP $auto$opt_reduce.cc:134:opt_pmux$5162 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2568: $auto$opt_reduce.cc:134:opt_pmux$5164
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2651: { \soc.cpu.instr_trap $auto$opt_reduce.cc:134:opt_pmux$5168 $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_pmux$5166 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2823: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1740_CMP $flatten\soc.\cpu.$procmux$1739_CMP $flatten\soc.\cpu.$procmux$1737_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2849: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y $auto$opt_reduce.cc:134:opt_pmux$5172 $auto$opt_reduce.cc:134:opt_pmux$5170 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3032: { $auto$opt_reduce.cc:134:opt_pmux$5176 $auto$opt_reduce.cc:134:opt_pmux$5174 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3085: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_pmux$5178 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3202: $auto$opt_reduce.cc:134:opt_pmux$5180
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3292: { $flatten\soc.\cpu.$procmux$3289_CMP $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5182 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3310: $auto$opt_reduce.cc:134:opt_pmux$5184
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3378: { $flatten\soc.\cpu.$procmux$3289_CMP $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5186 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3396: { $flatten\soc.\cpu.$procmux$3289_CMP $auto$opt_reduce.cc:134:opt_pmux$5188 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3444: { $auto$opt_reduce.cc:134:opt_pmux$5190 $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3465: $auto$opt_reduce.cc:134:opt_pmux$5192
    New ctrl vector for $pmux cell $flatten\display.$procmux$4843: $auto$opt_reduce.cc:134:opt_pmux$5194
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3586: { $flatten\soc.\cpu.$procmux$3594_CMP $auto$opt_reduce.cc:134:opt_pmux$5196 $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3598: $auto$opt_reduce.cc:134:opt_pmux$5198
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3754: $auto$opt_reduce.cc:134:opt_pmux$5200
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4141: { $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5202 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4156: { $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5204 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4174: $auto$opt_reduce.cc:134:opt_pmux$5206
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4187: $auto$opt_reduce.cc:134:opt_pmux$5208
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4212: { $auto$opt_reduce.cc:134:opt_pmux$5210 $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4247: { $flatten\soc.\cpu.$procmux$3289_CMP $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5212 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4262: { $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5214 $flatten\soc.\cpu.$procmux$3293_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4289: { $flatten\soc.\cpu.$procmux$3289_CMP $auto$opt_reduce.cc:134:opt_pmux$5216 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4302: $auto$opt_reduce.cc:134:opt_pmux$5218
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4328: { $auto$opt_reduce.cc:134:opt_pmux$5222 $flatten\soc.\cpu.$procmux$3307_CMP $flatten\soc.\cpu.$procmux$3285_CMP $auto$opt_reduce.cc:134:opt_pmux$5220 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4347: { $flatten\soc.\cpu.$procmux$3289_CMP $auto$opt_reduce.cc:134:opt_pmux$5224 }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.\cpuregs.$procmux$1327:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272
      New ports: A=1'0, B=1'1, Y=$flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0]
      New connections: $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [31:1] = { $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$1268_EN[31:0]$1272 [0] }
    New ctrl vector for $pmux cell $flatten\soc.\simpleuart.$procmux$4793: $auto$opt_reduce.cc:134:opt_pmux$5226
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$4624: { $flatten\soc.\spimemio.$procmux$4467_CMP $auto$opt_reduce.cc:134:opt_pmux$5228 $flatten\soc.\spimemio.$procmux$4453_CMP $flatten\soc.\spimemio.$procmux$4450_CMP $flatten\soc.\spimemio.$procmux$4447_CMP $flatten\soc.\spimemio.$procmux$4444_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1429: $auto$opt_reduce.cc:134:opt_pmux$5230
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$1734: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $auto$opt_reduce.cc:134:opt_pmux$5232 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1574: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$5234 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1584: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$5236 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1593: $auto$opt_reduce.cc:134:opt_pmux$5238
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1601: $auto$opt_reduce.cc:134:opt_pmux$5240
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1609: $auto$opt_reduce.cc:134:opt_pmux$5242
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1617: $auto$opt_reduce.cc:134:opt_pmux$5244
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1626: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$5246 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$1756: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1740_CMP $auto$opt_reduce.cc:134:opt_pmux$5248 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1636: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$5250 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5159: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5163: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5167: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5171: { \soc.cpu.is_slli_srli_srai \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5175: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y \soc.cpu.is_slli_srli_srai \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5177: { \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \top.
Performed a total of 56 changes.

8.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~177 debug messages>
Removed a total of 59 cells.

8.11.6. Executing OPT_DFF pass (perform DFF optimizations).

8.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 703 unused wires.
<suppressed ~21 debug messages>

8.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.9. Rerunning OPT passes. (Maybe there is more to do..)

8.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~268 debug messages>

8.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2173: $auto$opt_reduce.cc:134:opt_pmux$5252
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2190: { $flatten\soc.\cpu.$procmux$1738_CMP $auto$opt_reduce.cc:134:opt_pmux$5254 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2610: { $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y $flatten\soc.\cpu.$procmux$1740_CMP $flatten\soc.\cpu.$procmux$1739_CMP $flatten\soc.\cpu.$procmux$1738_CMP $flatten\soc.\cpu.$procmux$1737_CMP $auto$opt_reduce.cc:134:opt_pmux$5256 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3480: $auto$opt_reduce.cc:134:opt_pmux$5258
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4185: { $flatten\soc.\cpu.$procmux$3309_CMP $auto$opt_reduce.cc:134:opt_pmux$5260 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$4429: $auto$opt_reduce.cc:134:opt_pmux$5262
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$4531: { $flatten\soc.\spimemio.$procmux$4467_CMP $auto$opt_reduce.cc:134:opt_pmux$5264 $flatten\soc.\spimemio.$procmux$4444_CMP }
  Optimizing cells in module \top.
Performed a total of 7 changes.

8.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.11.13. Executing OPT_DFF pass (perform DFF optimizations).

8.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.16. Rerunning OPT passes. (Maybe there is more to do..)

8.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~268 debug messages>

8.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.11.20. Executing OPT_DFF pass (perform DFF optimizations).

8.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.11.23. Finished OPT passes. (There is nothing left to do.)

8.12. Executing FSM pass (extract and optimize FSM).

8.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.display.dd as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Found FSM state register top.soc.cpu.cpu_state.
Not marking top.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.soc.cpu.mem_wordsize.
Not marking top.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.soc.spimemio.state.

8.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\top'.
  found $dff cell for state register: $flatten\soc.\cpu.$procdff$4981
  root of input selection tree: $flatten\soc.\cpu.$0\cpu_state[7:0]
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1933$1196_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1917$1179_Y
  found ctrl input: \soc.cpu.resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5252
  found ctrl input: $flatten\soc.\cpu.$procmux$1737_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$1738_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$1739_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$1740_CMP
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1867$1164_Y
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1826$1142_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sll_srl_sra
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5166
  found ctrl input: \soc.cpu.is_slli_srli_srai
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5164
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00000001
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1614$1100_Y
  found state code: 8'10000000
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1533$1077_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1543$1085_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1925$1189_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1918$1182_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1920$1186_Y
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y
  found ctrl output: $flatten\soc.\cpu.$procmux$1735_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1736_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1737_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1738_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1739_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1740_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$1742_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$5166 $auto$opt_reduce.cc:134:opt_pmux$5164 $auto$opt_reduce.cc:134:opt_pmux$5252 $flatten\soc.\cpu.$logic_and$picorv32.v:1933$1196_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1925$1189_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1920$1186_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1918$1182_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1917$1179_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1867$1164_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y $flatten\soc.\cpu.$eq$picorv32.v:1826$1142_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1614$1100_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1543$1085_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1533$1077_Y \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.is_sll_srl_sra \soc.cpu.is_sb_sh_sw \soc.cpu.is_slli_srli_srai \soc.cpu.decoder_trigger \soc.cpu.instr_trap \soc.cpu.instr_jal \soc.cpu.mem_done \soc.cpu.resetn }
  ctrl outputs: { $flatten\soc.\cpu.$procmux$1742_CMP $flatten\soc.\cpu.$procmux$1740_CMP $flatten\soc.\cpu.$procmux$1739_CMP $flatten\soc.\cpu.$procmux$1738_CMP $flatten\soc.\cpu.$procmux$1737_CMP $flatten\soc.\cpu.$procmux$1736_CMP $flatten\soc.\cpu.$procmux$1735_CMP $flatten\soc.\cpu.$0\cpu_state[7:0] $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y }
  transition: 8'10000000 24'---0---0---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---0---0---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00-01---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---00-01---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00011---------------- -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---00111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---010-1---------------- -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---01101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---01101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---01111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---01111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---1-0------------------ -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---1-1-0---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---1-1-0---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---10101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---10101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---10111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---10111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---11101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---11101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---11111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---11111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'01000000 24'---0---0---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---0---0-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---00-01-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00011---------------- -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---00111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---00111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---010-1---------------- -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---01101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---01101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---01111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-0------------------ -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---1-1-0---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---1-1-0-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---10101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---10111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---11101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---11111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'00100000 24'---0---0---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-0---0---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-0---0---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-0---0---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---0---0----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---0---0----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-0---0---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---0---0---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---0---0----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--0---0---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---00-01---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-00-01---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-00-01---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-00-01---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---00-01----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00-01----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-00-01---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---00-01---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---00-01----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--00-01---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---00011---------------- -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-00111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-00111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-00111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---00111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-00111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---00111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---00111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--00111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---010-1---------------- -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-01101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-01101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-01101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---01101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-01101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---01101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---01101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--01101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---01111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-01111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-01111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-01111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---01111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-01111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---01111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---01111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--01111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---1-0------------------ -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---1-1-0---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-1-1-0---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-1-1-0---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-1-1-0---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---1-1-0----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---1-1-0----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-1-1-0---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---1-1-0---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---1-1-0----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--1-1-0---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---10101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-10101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-10101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-10101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---10101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---10101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-10101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---10101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---10101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--10101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---10111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-10111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-10111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-10111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---10111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---10111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-10111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---10111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---10111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--10111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---11101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-11101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-11101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-11101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---11101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---11101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-11101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---11101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---11101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--11101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---11111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-11111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-11111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-11111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---11111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---11111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-11111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---11111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---11111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--11111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00001000 24'---0---0---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---0---0-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---0---0-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---0---0-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---00-01-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00011---------------- -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---00111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---00111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---010-1---------------- -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---01101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---01101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---01111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-0------------------ -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---1-1-0---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-1-0-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-1-0-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---1-1-0-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---10101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---10111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---11101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---11111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00000100 24'---0---0---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---0---0--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---0---0--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00-01---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00-01--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---00-01--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00011---------------- -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---00111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---00111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---010-1---------------- -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---01101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---01101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---01111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---1-0------------------ -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---1-1-0---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---1-1-0--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---1-1-0--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---10101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---10111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---11101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---11111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000010 24'---0---0---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---0---0-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0---001-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0---011-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00-01---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00-01-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---00-0101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---00-0111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00011---------------- -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---00111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0011101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0011111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---010-1---------------- -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---01101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0110101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0110111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0111101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0111111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---1-0------------------ -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---1-1-0---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---1-1-0-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1-1-001-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1-1-011-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1010101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1010111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1011101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1011111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1110101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1110111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1111101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1111111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000001 24'---0---0---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---0---0-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0---001-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0---011-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00-01---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00-01-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---00-0101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---00-0111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00011---------------- -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---00111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0011101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0011111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---010-1---------------- -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---01101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0110101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0110111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0111101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0111111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---1-0------------------ -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---1-1-0---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---1-1-0-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1-1-001-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1-1-011-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1010101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1010111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1011101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1011111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1110101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1110111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1111101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1111111-------------1 -> 8'01000000 16'0000001010000000
Extracting FSM `\soc.cpu.mem_wordsize' from module `\top'.
  found $dff cell for state register: $flatten\soc.\cpu.$procdff$4968
  root of input selection tree: $flatten\soc.\cpu.$0\mem_wordsize[1:0]
  found ctrl input: \soc.cpu.resetn
  found ctrl input: $flatten\soc.\cpu.$procmux$1735_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$1736_CMP
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y
  found ctrl input: \soc.cpu.mem_do_rdata
  found ctrl input: \soc.cpu.instr_lw
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1882$1169_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1881$1168_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \soc.cpu.mem_do_wdata
  found ctrl input: \soc.cpu.instr_sw
  found ctrl input: \soc.cpu.instr_sh
  found ctrl input: \soc.cpu.instr_sb
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1918$1180_Y
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1925$1187_Y
  found ctrl output: $flatten\soc.\cpu.$procmux$4363_CMP
  ctrl inputs: { $flatten\soc.\cpu.$procmux$1736_CMP $flatten\soc.\cpu.$procmux$1735_CMP $flatten\soc.\cpu.$logic_or$picorv32.v:1882$1169_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1881$1168_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y \soc.cpu.instr_sw \soc.cpu.instr_sh \soc.cpu.instr_sb \soc.cpu.instr_lw \soc.cpu.mem_do_wdata \soc.cpu.mem_do_rdata \soc.cpu.resetn }
  ctrl outputs: { $flatten\soc.\cpu.$procmux$4363_CMP $flatten\soc.\cpu.$eq$picorv32.v:1925$1187_Y $flatten\soc.\cpu.$eq$picorv32.v:1918$1180_Y $flatten\soc.\cpu.$0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'00---0------1 ->       2'00 5'00100
  transition:       2'00 13'-----1------1 ->       2'00 5'00100
  transition:       2'00 13'1---0-------1 ->       2'00 5'00100
  transition:       2'00 13'1---1-000-0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1---1-0-1 ->       2'10 5'00110
  transition:       2'00 13'1---1--1--0-1 ->       2'01 5'00101
  transition:       2'00 13'1---1-1---0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1-----1-1 ->       2'00 5'00100
  transition:       2'00 13'-1--0-------1 ->       2'00 5'00100
  transition:       2'00 13'-1001----0-01 ->       2'00 5'00100
  transition:       2'00 13'-1-11------01 ->       2'10 5'00110
  transition:       2'00 13'-11-1------01 ->       2'01 5'00101
  transition:       2'00 13'-1--1----1-01 ->       2'00 5'00100
  transition:       2'00 13'-1--1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'00---0------1 ->       2'10 5'10010
  transition:       2'10 13'-----1------1 ->       2'00 5'10000
  transition:       2'10 13'1---0-------1 ->       2'10 5'10010
  transition:       2'10 13'1---1-000-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1---1-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1--1--0-1 ->       2'01 5'10001
  transition:       2'10 13'1---1-1---0-1 ->       2'00 5'10000
  transition:       2'10 13'1---1-----1-1 ->       2'10 5'10010
  transition:       2'10 13'-1--0-------1 ->       2'10 5'10010
  transition:       2'10 13'-1001----0-01 ->       2'10 5'10010
  transition:       2'10 13'-1-11------01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'01 5'10001
  transition:       2'10 13'-1--1----1-01 ->       2'00 5'10000
  transition:       2'10 13'-1--1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'00---0------1 ->       2'01 5'01001
  transition:       2'01 13'-----1------1 ->       2'00 5'01000
  transition:       2'01 13'1---0-------1 ->       2'01 5'01001
  transition:       2'01 13'1---1-000-0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1---1-0-1 ->       2'10 5'01010
  transition:       2'01 13'1---1--1--0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1-1---0-1 ->       2'00 5'01000
  transition:       2'01 13'1---1-----1-1 ->       2'01 5'01001
  transition:       2'01 13'-1--0-------1 ->       2'01 5'01001
  transition:       2'01 13'-1001----0-01 ->       2'01 5'01001
  transition:       2'01 13'-1-11------01 ->       2'10 5'01010
  transition:       2'01 13'-11-1------01 ->       2'01 5'01001
  transition:       2'01 13'-1--1----1-01 ->       2'00 5'01000
  transition:       2'01 13'-1--1------11 ->       2'01 5'01001
Extracting FSM `\soc.spimemio.state' from module `\top'.
  found $dff cell for state register: $flatten\soc.\spimemio.$procdff$5115
  root of input selection tree: $flatten\soc.\spimemio.$0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:211$525_Y
  found ctrl input: \soc.spimemio.jump
  found ctrl input: $flatten\soc.\spimemio.$procmux$4444_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4447_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4450_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4453_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4456_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4459_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4462_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4467_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4470_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4430_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4476_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4433_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$4482_CMP
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:350$543_Y
  found ctrl input: \soc.spimemio.xfer.din_ready
  found state code: 4'1001
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:310$539_Y
  found state code: 4'1000
  found state code: 4'0111
  found ctrl input: $flatten\soc.\spimemio.$logic_and$spimemio.v:282$538_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \soc.spimemio.dout_valid
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl input: \soc.spimemio.config_cont
  found state code: 4'0000
  found ctrl output: $flatten\soc.\spimemio.$procmux$4430_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4433_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4444_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4447_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4450_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4453_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4456_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4459_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4462_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4467_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4470_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4476_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$4482_CMP
  ctrl inputs: { \soc.spimemio.xfer.din_ready $flatten\soc.\spimemio.$logic_or$spimemio.v:350$543_Y $flatten\soc.\spimemio.$logic_or$spimemio.v:310$539_Y $flatten\soc.\spimemio.$logic_and$spimemio.v:282$538_Y $flatten\soc.\spimemio.$logic_or$spimemio.v:211$525_Y \soc.spimemio.config_cont \soc.spimemio.jump \soc.spimemio.dout_valid }
  ctrl outputs: { $flatten\soc.\spimemio.$procmux$4482_CMP $flatten\soc.\spimemio.$procmux$4476_CMP $flatten\soc.\spimemio.$procmux$4470_CMP $flatten\soc.\spimemio.$procmux$4467_CMP $flatten\soc.\spimemio.$procmux$4462_CMP $flatten\soc.\spimemio.$procmux$4459_CMP $flatten\soc.\spimemio.$procmux$4456_CMP $flatten\soc.\spimemio.$procmux$4453_CMP $flatten\soc.\spimemio.$procmux$4450_CMP $flatten\soc.\spimemio.$procmux$4447_CMP $flatten\soc.\spimemio.$procmux$4444_CMP $flatten\soc.\spimemio.$procmux$4433_CMP $flatten\soc.\spimemio.$procmux$4430_CMP $flatten\soc.\spimemio.$0\state[3:0] }
  transition:     4'0000 8'0---0-0- ->     4'0000 17'10000000000000000
  transition:     4'0000 8'1---0-0- ->     4'0001 17'10000000000000001
  transition:     4'0000 8'----001- ->     4'0100 17'10000000000000100
  transition:     4'0000 8'----011- ->     4'0101 17'10000000000000101
  transition:     4'0000 8'----1--- ->     4'0000 17'10000000000000000
  transition:     4'1000 8'0---0-0- ->     4'1000 17'00000010000001000
  transition:     4'1000 8'1---0-0- ->     4'1001 17'00000010000001001
  transition:     4'1000 8'----001- ->     4'0100 17'00000010000000100
  transition:     4'1000 8'----011- ->     4'0101 17'00000010000000101
  transition:     4'1000 8'----1--- ->     4'0000 17'00000010000000000
  transition:     4'0100 8'0---0-0- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'1---0-0- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----001- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'----011- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----1--- ->     4'0000 17'00100000000000000
  transition:     4'1100 8'-0--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'01--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'11--0-0- ->     4'1001 17'00000000001001001
  transition:     4'1100 8'----001- ->     4'0100 17'00000000001000100
  transition:     4'1100 8'----011- ->     4'0101 17'00000000001000101
  transition:     4'1100 8'----1--- ->     4'0000 17'00000000001000000
  transition:     4'0010 8'0---0-0- ->     4'0010 17'01000000000000010
  transition:     4'0010 8'1---0-0- ->     4'0011 17'01000000000000011
  transition:     4'0010 8'----001- ->     4'0100 17'01000000000000100
  transition:     4'0010 8'----011- ->     4'0101 17'01000000000000101
  transition:     4'0010 8'----1--- ->     4'0000 17'01000000000000000
  transition:     4'1010 8'0---0-0- ->     4'1010 17'00000000100001010
  transition:     4'1010 8'1---0-0- ->     4'1011 17'00000000100001011
  transition:     4'1010 8'----001- ->     4'0100 17'00000000100000100
  transition:     4'1010 8'----011- ->     4'0101 17'00000000100000101
  transition:     4'1010 8'----1--- ->     4'0000 17'00000000100000000
  transition:     4'0110 8'0---0-0- ->     4'0110 17'00001000000000110
  transition:     4'0110 8'1---0-0- ->     4'0111 17'00001000000000111
  transition:     4'0110 8'----001- ->     4'0100 17'00001000000000100
  transition:     4'0110 8'----011- ->     4'0101 17'00001000000000101
  transition:     4'0110 8'----1--- ->     4'0000 17'00001000000000000
  transition:     4'0001 8'----0-00 ->     4'0001 17'00000000000100001
  transition:     4'0001 8'----0-01 ->     4'0010 17'00000000000100010
  transition:     4'0001 8'----001- ->     4'0100 17'00000000000100100
  transition:     4'0001 8'----011- ->     4'0101 17'00000000000100101
  transition:     4'0001 8'----1--- ->     4'0000 17'00000000000100000
  transition:     4'1001 8'0---0-0- ->     4'1001 17'00000001000001001
  transition:     4'1001 8'1---0-0- ->     4'1010 17'00000001000001010
  transition:     4'1001 8'----001- ->     4'0100 17'00000001000000100
  transition:     4'1001 8'----011- ->     4'0101 17'00000001000000101
  transition:     4'1001 8'----1--- ->     4'0000 17'00000001000000000
  transition:     4'0101 8'---00-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'0--10-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'1--10-0- ->     4'0110 17'00010000000000110
  transition:     4'0101 8'----001- ->     4'0100 17'00010000000000100
  transition:     4'0101 8'----011- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'----1--- ->     4'0000 17'00010000000000000
  transition:     4'0011 8'----0-00 ->     4'0011 17'00000000000010011
  transition:     4'0011 8'----0-01 ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----001- ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----011- ->     4'0101 17'00000000000010101
  transition:     4'0011 8'----1--- ->     4'0000 17'00000000000010000
  transition:     4'1011 8'0---0-0- ->     4'1011 17'00000000010001011
  transition:     4'1011 8'1---0-0- ->     4'1100 17'00000000010001100
  transition:     4'1011 8'----001- ->     4'0100 17'00000000010000100
  transition:     4'1011 8'----011- ->     4'0101 17'00000000010000101
  transition:     4'1011 8'----1--- ->     4'0000 17'00000000010000000
  transition:     4'0111 8'0---0-0- ->     4'0111 17'00000100000000111
  transition:     4'0111 8'1-0-0-0- ->     4'1001 17'00000100000001001
  transition:     4'0111 8'1-1-0-0- ->     4'1000 17'00000100000001000
  transition:     4'0111 8'----001- ->     4'0100 17'00000100000000100
  transition:     4'0111 8'----011- ->     4'0101 17'00000100000000101
  transition:     4'0111 8'----1--- ->     4'0000 17'00000100000000000

8.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.spimemio.state$5280' from module `\top'.
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$5275' from module `\top'.
Optimizing FSM `$fsm$\soc.cpu.cpu_state$5265' from module `\top'.
  Merging pattern 24'---10101---------------1 and 24'---10111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---01101---------------1 and 24'---01111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---11101---------------1 and 24'---11111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---10111---------------1 and 24'---10101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---01111---------------1 and 24'---01101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---11111---------------1 and 24'---11101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---101-1---------------1 and 24'---111-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---111-1---------------1 and 24'---101-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---1-1-0---------------1 and 24'---1-1-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---1-1-1---------------1 and 24'---1-1-0---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----1-1-1 and 24'---10111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----00----1-1-1 and 24'---01111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----00----1-1-1 and 24'---11111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----00----1-1-1 and 24'---10101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----00----1-1-1 and 24'---01101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----00----1-1-1 and 24'---11101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----0---1 and 24'---10111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----00----0---1 and 24'---01111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----00----0---1 and 24'---11111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----00----0---1 and 24'---10101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----00----0---1 and 24'---01101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----00----0---1 and 24'---11101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----10--------1 and 24'---10111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----10--------1 and 24'---01111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----10--------1 and 24'---11111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----10--------1 and 24'---10101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----10--------1 and 24'---01101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----10--------1 and 24'---11101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101------1--------1 and 24'---10111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101------1--------1 and 24'---01111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101------1--------1 and 24'---11111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111------1--------1 and 24'---10101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111------1--------1 and 24'---01101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111------1--------1 and 24'---11101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----00----1-1-1 and 24'---111-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----00----1-1-1 and 24'---101-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----00----0---1 and 24'---111-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----00----0---1 and 24'---101-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----10--------1 and 24'---111-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----10--------1 and 24'---101-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1------1--------1 and 24'---111-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1------1--------1 and 24'---101-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----00----1-1-1 and 24'---1-1-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----00----1-1-1 and 24'---1-1-0-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----00----0---1 and 24'---1-1-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----00----0---1 and 24'---1-1-0-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----10--------1 and 24'---1-1-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----10--------1 and 24'---1-1-0-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0------1--------1 and 24'---1-1-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1------1--------1 and 24'---1-1-0------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----1-0-1 and 24'---10111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---01101-----00----1-0-1 and 24'---01111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---11101-----00----1-0-1 and 24'---11111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---10111-----00----1-0-1 and 24'---10101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---01111-----00----1-0-1 and 24'---01101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---11111-----00----1-0-1 and 24'---11101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---101-1-----00----1-0-1 and 24'---111-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---111-1-----00----1-0-1 and 24'---101-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---1-1-0-----00----1-0-1 and 24'---1-1-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---1-1-1-----00----1-0-1 and 24'---1-1-0-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---10101----0-------1--1 and 24'---10111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---01101----0-------1--1 and 24'---01111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---11101----0-------1--1 and 24'---11111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---10111----0-------1--1 and 24'---10101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---01111----0-------1--1 and 24'---01101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---11111----0-------1--1 and 24'---11101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---101-1----0-------1--1 and 24'---111-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---111-1----0-------1--1 and 24'---101-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---1-1-0----0-------1--1 and 24'---1-1-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---1-1-1----0-------1--1 and 24'---1-1-0----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10101----1-------1--1 and 24'---10111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01101----1-------1--1 and 24'---01111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11101----1-------1--1 and 24'---11111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10111----1-------1--1 and 24'---10101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01111----1-------1--1 and 24'---01101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11111----1-------1--1 and 24'---11101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-10101---------------1 and 24'-1-10111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-01101---------------1 and 24'-1-01111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-11101---------------1 and 24'-1-11111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-10111---------------1 and 24'-1-10101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-01111---------------1 and 24'-1-01101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-11111---------------1 and 24'-1-11101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---101-1----1-------1--1 and 24'---111-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---111-1----1-------1--1 and 24'---101-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-101-1---------------1 and 24'-1-111-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-111-1---------------1 and 24'-1-101-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-0----1-------1--1 and 24'---1-1-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-1----1-------1--1 and 24'---1-1-0----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-1-1-0---------------1 and 24'-1-1-1-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-1-1-1---------------1 and 24'-1-1-1-0---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'00-10101---0----000-0--1 and 24'00-10111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-01101---0----000-0--1 and 24'00-01111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-11101---0----000-0--1 and 24'00-11111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-10111---0----000-0--1 and 24'00-10101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-01111---0----000-0--1 and 24'00-01101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-11111---0----000-0--1 and 24'00-11101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--10101---------------1 and 24'1--10111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--01101---------------1 and 24'1--01111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--11101---------------1 and 24'1--11111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--10111---------------1 and 24'1--10101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--01111---------------1 and 24'1--01101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--11111---------------1 and 24'1--11101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-101-1---0----000-0--1 and 24'00-111-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-111-1---0----000-0--1 and 24'00-101-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--101-1---------------1 and 24'1--111-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--111-1---------------1 and 24'1--101-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-1-1-0---0----000-0--1 and 24'00-1-1-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-1-1-1---0----000-0--1 and 24'00-1-1-0---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--1-1-0---------------1 and 24'1--1-1-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--1-1-1---------------1 and 24'1--1-1-0---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-10101---0----1-0-0--1 and 24'00-10111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-01101---0----1-0-0--1 and 24'00-01111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-11101---0----1-0-0--1 and 24'00-11111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-10111---0----1-0-0--1 and 24'00-10101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-01111---0----1-0-0--1 and 24'00-01101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-11111---0----1-0-0--1 and 24'00-11101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---10101----------1----1 and 24'---10111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---01101----------1----1 and 24'---01111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---11101----------1----1 and 24'---11111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---10111----------1----1 and 24'---10101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---01111----------1----1 and 24'---01101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---11111----------1----1 and 24'---11101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-101-1---0----1-0-0--1 and 24'00-111-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-111-1---0----1-0-0--1 and 24'00-101-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---101-1----------1----1 and 24'---111-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---111-1----------1----1 and 24'---101-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-1-1-0---0----1-0-0--1 and 24'00-1-1-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-1-1-1---0----1-0-0--1 and 24'00-1-1-0---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---1-1-0----------1----1 and 24'---1-1-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---1-1-1----------1----1 and 24'---1-1-0----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-10101---0-----10-0--1 and 24'00-10111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-01101---0-----10-0--1 and 24'00-01111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-11101---0-----10-0--1 and 24'00-11111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-10111---0-----10-0--1 and 24'00-10101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-01111---0-----10-0--1 and 24'00-01101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-11111---0-----10-0--1 and 24'00-11101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-101-1---0-----10-0--1 and 24'00-111-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-111-1---0-----10-0--1 and 24'00-101-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-1-1-0---0-----10-0--1 and 24'00-1-1-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-1-1-1---0-----10-0--1 and 24'00-1-1-0---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'---10101---1-----------1 and 24'---10111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---01101---1-----------1 and 24'---01111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---11101---1-----------1 and 24'---11111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---10111---1-----------1 and 24'---10101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---01111---1-----------1 and 24'---01101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---11111---1-----------1 and 24'---11101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---101-1---1-----------1 and 24'---111-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---111-1---1-----------1 and 24'---101-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---1-1-0---1-----------1 and 24'---1-1-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---1-1-1---1-----------1 and 24'---1-1-0---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------1------11 and 24'---10111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101-------1------11 and 24'---01111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101-------1------11 and 24'---11111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111-------1------11 and 24'---10101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111-------1------11 and 24'---01101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111-------1------11 and 24'---11101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------0-------1 and 24'---10111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101-------0-------1 and 24'---01111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101-------0-------1 and 24'---11111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111-------0-------1 and 24'---10101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111-------0-------1 and 24'---01101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111-------0-------1 and 24'---11101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1-------1------11 and 24'---111-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1-------1------11 and 24'---101-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1-------0-------1 and 24'---111-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1-------0-------1 and 24'---101-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0-------1------11 and 24'---1-1-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1-------1------11 and 24'---1-1-0-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0-------0-------1 and 24'---1-1-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1-------0-------1 and 24'---1-1-0-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------1------01 and 24'---10111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---01101-------1------01 and 24'---01111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---11101-------1------01 and 24'---11111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---10111-------1------01 and 24'---10101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---01111-------1------01 and 24'---01101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---11111-------1------01 and 24'---11101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---101-1-------1------01 and 24'---111-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---111-1-------1------01 and 24'---101-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---1-1-0-------1------01 and 24'---1-1-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---1-1-1-------1------01 and 24'---1-1-0-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10101--1------------1 and 24'---10111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01101--1------------1 and 24'---01111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11101--1------------1 and 24'---11111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10111--1------------1 and 24'---10101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01111--1------------1 and 24'---01101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11111--1------------1 and 24'---11101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---101-1--1------------1 and 24'---111-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---111-1--1------------1 and 24'---101-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-0--1------------1 and 24'---1-1-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-1--1------------1 and 24'---1-1-0--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10101--0------------1 and 24'---10111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---01101--0------------1 and 24'---01111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---11101--0------------1 and 24'---11111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---10111--0------------1 and 24'---10101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---01111--0------------1 and 24'---01101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---11111--0------------1 and 24'---11101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---101-1--0------------1 and 24'---111-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---111-1--0------------1 and 24'---101-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---1-1-0--0------------1 and 24'---1-1-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---1-1-1--0------------1 and 24'---1-1-0--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1010111-------------1 and 24'---1011111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---0110111-------------1 and 24'---0111111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1110111-------------1 and 24'---1111111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1011111-------------1 and 24'---1010111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---0111111-------------1 and 24'---0110111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1111111-------------1 and 24'---1110111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---101-111-------------1 and 24'---111-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---111-111-------------1 and 24'---101-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-011-------------1 and 24'---1-1-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-111-------------1 and 24'---1-1-011-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---10101-0-------------1 and 24'---10111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---01101-0-------------1 and 24'---01111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---11101-0-------------1 and 24'---11111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---10111-0-------------1 and 24'---10101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---01111-0-------------1 and 24'---01101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---11111-0-------------1 and 24'---11101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1010101-------------1 and 24'---1011101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---0110101-------------1 and 24'---0111101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1110101-------------1 and 24'---1111101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1011101-------------1 and 24'---1010101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---0111101-------------1 and 24'---0110101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1111101-------------1 and 24'---1110101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---101-1-0-------------1 and 24'---111-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---111-1-0-------------1 and 24'---101-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---101-101-------------1 and 24'---111-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---111-101-------------1 and 24'---101-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-0-0-------------1 and 24'---1-1-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-1-0-------------1 and 24'---1-1-0-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-001-------------1 and 24'---1-1-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-101-------------1 and 24'---1-1-001-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1010111-------------1 and 24'---1011111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---0110111-------------1 and 24'---0111111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1110111-------------1 and 24'---1111111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1011111-------------1 and 24'---1010111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---0111111-------------1 and 24'---0110111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1111111-------------1 and 24'---1110111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---101-111-------------1 and 24'---111-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---111-111-------------1 and 24'---101-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-011-------------1 and 24'---1-1-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-111-------------1 and 24'---1-1-011-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---10101-0-------------1 and 24'---10111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---01101-0-------------1 and 24'---01111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---11101-0-------------1 and 24'---11111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---10111-0-------------1 and 24'---10101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---01111-0-------------1 and 24'---01101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---11111-0-------------1 and 24'---11101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1010101-------------1 and 24'---1011101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---0110101-------------1 and 24'---0111101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1110101-------------1 and 24'---1111101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1011101-------------1 and 24'---1010101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---0111101-------------1 and 24'---0110101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1111101-------------1 and 24'---1110101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---101-1-0-------------1 and 24'---111-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---111-1-0-------------1 and 24'---101-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---101-101-------------1 and 24'---111-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---111-101-------------1 and 24'---101-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-0-0-------------1 and 24'---1-1-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-1-0-------------1 and 24'---1-1-0-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-001-------------1 and 24'---1-1-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-101-------------1 and 24'---1-1-001-------------1 from group (6 6 16'0000001000000010).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$5252.

8.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 75 unused cells and 75 unused wires.
<suppressed ~76 debug messages>

8.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$5265' from module `\top'.
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$5275' from module `\top'.
  Removing unused output signal $flatten\soc.\cpu.$0\mem_wordsize[1:0] [0].
  Removing unused output signal $flatten\soc.\cpu.$0\mem_wordsize[1:0] [1].
Optimizing FSM `$fsm$\soc.spimemio.state$5280' from module `\top'.
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [0].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [1].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [2].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [3].

8.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$5265' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\soc.cpu.mem_wordsize$5275' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc.spimemio.state$5280' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1
  1000 -> -----------1-
  0100 -> ----------1--
  1100 -> ---------1---
  0010 -> --------1----
  1010 -> -------1-----
  0110 -> ------1------
  0001 -> -----1-------
  1001 -> ----1--------
  0101 -> ---1---------
  0011 -> --1----------
  1011 -> -1-----------
  0111 -> 1------------

8.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$5265' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$5265 (\soc.cpu.cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \soc.cpu.resetn
    1: \soc.cpu.mem_done
    2: \soc.cpu.instr_jal
    3: \soc.cpu.instr_trap
    4: \soc.cpu.decoder_trigger
    5: \soc.cpu.is_slli_srli_srai
    6: \soc.cpu.is_sb_sh_sw
    7: \soc.cpu.is_sll_srl_sra
    8: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
    9: $flatten\soc.\cpu.$logic_and$picorv32.v:1533$1077_Y
   10: $flatten\soc.\cpu.$logic_and$picorv32.v:1543$1085_Y
   11: $flatten\soc.\cpu.$logic_and$picorv32.v:1614$1100_Y
   12: $flatten\soc.\cpu.$logic_and$picorv32.v:1691$1114_Y
   13: $flatten\soc.\cpu.$eq$picorv32.v:1826$1142_Y
   14: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y
   15: $flatten\soc.\cpu.$logic_and$picorv32.v:1867$1164_Y
   16: $flatten\soc.\cpu.$logic_and$picorv32.v:1917$1179_Y
   17: $flatten\soc.\cpu.$logic_and$picorv32.v:1918$1182_Y
   18: $flatten\soc.\cpu.$logic_and$picorv32.v:1920$1186_Y
   19: $flatten\soc.\cpu.$logic_and$picorv32.v:1925$1189_Y
   20: $flatten\soc.\cpu.$logic_and$picorv32.v:1933$1196_Y
   21: $auto$opt_reduce.cc:134:opt_pmux$5164
   22: $auto$opt_reduce.cc:134:opt_pmux$5166

  Output signals:
    0: $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y
    1: $flatten\soc.\cpu.$procmux$1735_CMP
    2: $flatten\soc.\cpu.$procmux$1736_CMP
    3: $flatten\soc.\cpu.$procmux$1737_CMP
    4: $flatten\soc.\cpu.$procmux$1738_CMP
    5: $flatten\soc.\cpu.$procmux$1739_CMP
    6: $flatten\soc.\cpu.$procmux$1740_CMP
    7: $flatten\soc.\cpu.$procmux$1742_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'--0---0---------------1   ->     0 8'10000000
      1:     0 23'--00-01---------------1   ->     0 8'10000000
      2:     0 23'--00111---------------1   ->     0 8'10000000
      3:     0 23'--011-1---------------1   ->     0 8'10000000
      4:     0 23'--1-1-----------------1   ->     0 8'10000000
      5:     0 23'--00011----------------   ->     0 8'10000000
      6:     0 23'--010-1----------------   ->     0 8'10000000
      7:     0 23'--1-0------------------   ->     0 8'10000000
      8:     0 23'--0---0---------------0   ->     1 8'10000000
      9:     0 23'--00-01---------------0   ->     1 8'10000000
     10:     0 23'--00111---------------0   ->     1 8'10000000
     11:     0 23'--011-1---------------0   ->     1 8'10000000
     12:     0 23'--1-1-----------------0   ->     1 8'10000000
     13:     1 23'--00011----------------   ->     0 8'00000001
     14:     1 23'--010-1----------------   ->     0 8'00000001
     15:     1 23'--1-0------------------   ->     0 8'00000001
     16:     1 23'--0---0---------------0   ->     1 8'00000001
     17:     1 23'--00-01---------------0   ->     1 8'00000001
     18:     1 23'--00111---------------0   ->     1 8'00000001
     19:     1 23'--011-1---------------0   ->     1 8'00000001
     20:     1 23'--1-1-----------------0   ->     1 8'00000001
     21:     1 23'--0---0-----00----1-1-1   ->     1 8'00000001
     22:     1 23'--00-01-----00----1-1-1   ->     1 8'00000001
     23:     1 23'--00111-----00----1-1-1   ->     1 8'00000001
     24:     1 23'--011-1-----00----1-1-1   ->     1 8'00000001
     25:     1 23'--1-1-------00----1-1-1   ->     1 8'00000001
     26:     1 23'--0---0-----00----0---1   ->     1 8'00000001
     27:     1 23'--00-01-----00----0---1   ->     1 8'00000001
     28:     1 23'--00111-----00----0---1   ->     1 8'00000001
     29:     1 23'--011-1-----00----0---1   ->     1 8'00000001
     30:     1 23'--1-1-------00----0---1   ->     1 8'00000001
     31:     1 23'--0---0-----10--------1   ->     1 8'00000001
     32:     1 23'--00-01-----10--------1   ->     1 8'00000001
     33:     1 23'--00111-----10--------1   ->     1 8'00000001
     34:     1 23'--011-1-----10--------1   ->     1 8'00000001
     35:     1 23'--1-1-------10--------1   ->     1 8'00000001
     36:     1 23'--0---0------1--------1   ->     1 8'00000001
     37:     1 23'--00-01------1--------1   ->     1 8'00000001
     38:     1 23'--00111------1--------1   ->     1 8'00000001
     39:     1 23'--011-1------1--------1   ->     1 8'00000001
     40:     1 23'--1-1--------1--------1   ->     1 8'00000001
     41:     1 23'--0---0-----00----1-0-1   ->     2 8'00000001
     42:     1 23'--00-01-----00----1-0-1   ->     2 8'00000001
     43:     1 23'--00111-----00----1-0-1   ->     2 8'00000001
     44:     1 23'--011-1-----00----1-0-1   ->     2 8'00000001
     45:     1 23'--1-1-------00----1-0-1   ->     2 8'00000001
     46:     2 23'--0---0----0-------1--1   ->     0 8'01000000
     47:     2 23'--00-01----0-------1--1   ->     0 8'01000000
     48:     2 23'--00111----0-------1--1   ->     0 8'01000000
     49:     2 23'--011-1----0-------1--1   ->     0 8'01000000
     50:     2 23'--1-1------0-------1--1   ->     0 8'01000000
     51:     2 23'--00011----------------   ->     0 8'01000000
     52:     2 23'--010-1----------------   ->     0 8'01000000
     53:     2 23'--1-0------------------   ->     0 8'01000000
     54:     2 23'--0---0---------------0   ->     1 8'01000000
     55:     2 23'--00-01---------------0   ->     1 8'01000000
     56:     2 23'--00111---------------0   ->     1 8'01000000
     57:     2 23'--011-1---------------0   ->     1 8'01000000
     58:     2 23'--1-1-----------------0   ->     1 8'01000000
     59:     2 23'--0---0----1-------1--1   ->     1 8'01000000
     60:     2 23'--00-01----1-------1--1   ->     1 8'01000000
     61:     2 23'--00111----1-------1--1   ->     1 8'01000000
     62:     2 23'--011-1----1-------1--1   ->     1 8'01000000
     63:     2 23'--1-1------1-------1--1   ->     1 8'01000000
     64:     2 23'-10---0---------------1   ->     1 8'01000000
     65:     2 23'-100-01---------------1   ->     1 8'01000000
     66:     2 23'-100111---------------1   ->     1 8'01000000
     67:     2 23'-1011-1---------------1   ->     1 8'01000000
     68:     2 23'-11-1-----------------1   ->     1 8'01000000
     69:     2 23'000---0---0----000-0--1   ->     3 8'01000000
     70:     2 23'0000-01---0----000-0--1   ->     3 8'01000000
     71:     2 23'0000111---0----000-0--1   ->     3 8'01000000
     72:     2 23'00011-1---0----000-0--1   ->     3 8'01000000
     73:     2 23'001-1-----0----000-0--1   ->     3 8'01000000
     74:     2 23'1-0---0---------------1   ->     3 8'01000000
     75:     2 23'1-00-01---------------1   ->     3 8'01000000
     76:     2 23'1-00111---------------1   ->     3 8'01000000
     77:     2 23'1-011-1---------------1   ->     3 8'01000000
     78:     2 23'1-1-1-----------------1   ->     3 8'01000000
     79:     2 23'000---0---0----1-0-0--1   ->     4 8'01000000
     80:     2 23'0000-01---0----1-0-0--1   ->     4 8'01000000
     81:     2 23'0000111---0----1-0-0--1   ->     4 8'01000000
     82:     2 23'00011-1---0----1-0-0--1   ->     4 8'01000000
     83:     2 23'001-1-----0----1-0-0--1   ->     4 8'01000000
     84:     2 23'--0---0----------1----1   ->     4 8'01000000
     85:     2 23'--00-01----------1----1   ->     4 8'01000000
     86:     2 23'--00111----------1----1   ->     4 8'01000000
     87:     2 23'--011-1----------1----1   ->     4 8'01000000
     88:     2 23'--1-1------------1----1   ->     4 8'01000000
     89:     2 23'000---0---0-----10-0--1   ->     5 8'01000000
     90:     2 23'0000-01---0-----10-0--1   ->     5 8'01000000
     91:     2 23'0000111---0-----10-0--1   ->     5 8'01000000
     92:     2 23'00011-1---0-----10-0--1   ->     5 8'01000000
     93:     2 23'001-1-----0-----10-0--1   ->     5 8'01000000
     94:     2 23'--0---0---1-----------1   ->     6 8'01000000
     95:     2 23'--00-01---1-----------1   ->     6 8'01000000
     96:     2 23'--00111---1-----------1   ->     6 8'01000000
     97:     2 23'--011-1---1-----------1   ->     6 8'01000000
     98:     2 23'--1-1-----1-----------1   ->     6 8'01000000
     99:     3 23'--00011----------------   ->     0 8'00010000
    100:     3 23'--010-1----------------   ->     0 8'00010000
    101:     3 23'--1-0------------------   ->     0 8'00010000
    102:     3 23'--0---0---------------0   ->     1 8'00010000
    103:     3 23'--00-01---------------0   ->     1 8'00010000
    104:     3 23'--00111---------------0   ->     1 8'00010000
    105:     3 23'--011-1---------------0   ->     1 8'00010000
    106:     3 23'--1-1-----------------0   ->     1 8'00010000
    107:     3 23'--0---0-------1------11   ->     1 8'00010000
    108:     3 23'--00-01-------1------11   ->     1 8'00010000
    109:     3 23'--00111-------1------11   ->     1 8'00010000
    110:     3 23'--011-1-------1------11   ->     1 8'00010000
    111:     3 23'--1-1---------1------11   ->     1 8'00010000
    112:     3 23'--0---0-------0-------1   ->     1 8'00010000
    113:     3 23'--00-01-------0-------1   ->     1 8'00010000
    114:     3 23'--00111-------0-------1   ->     1 8'00010000
    115:     3 23'--011-1-------0-------1   ->     1 8'00010000
    116:     3 23'--1-1---------0-------1   ->     1 8'00010000
    117:     3 23'--0---0-------1------01   ->     3 8'00010000
    118:     3 23'--00-01-------1------01   ->     3 8'00010000
    119:     3 23'--00111-------1------01   ->     3 8'00010000
    120:     3 23'--011-1-------1------01   ->     3 8'00010000
    121:     3 23'--1-1---------1------01   ->     3 8'00010000
    122:     4 23'--00011----------------   ->     0 8'00001000
    123:     4 23'--010-1----------------   ->     0 8'00001000
    124:     4 23'--1-0------------------   ->     0 8'00001000
    125:     4 23'--0---0---------------0   ->     1 8'00001000
    126:     4 23'--00-01---------------0   ->     1 8'00001000
    127:     4 23'--00111---------------0   ->     1 8'00001000
    128:     4 23'--011-1---------------0   ->     1 8'00001000
    129:     4 23'--1-1-----------------0   ->     1 8'00001000
    130:     4 23'--0---0--1------------1   ->     1 8'00001000
    131:     4 23'--00-01--1------------1   ->     1 8'00001000
    132:     4 23'--00111--1------------1   ->     1 8'00001000
    133:     4 23'--011-1--1------------1   ->     1 8'00001000
    134:     4 23'--1-1----1------------1   ->     1 8'00001000
    135:     4 23'--0---0--0------------1   ->     4 8'00001000
    136:     4 23'--00-01--0------------1   ->     4 8'00001000
    137:     4 23'--00111--0------------1   ->     4 8'00001000
    138:     4 23'--011-1--0------------1   ->     4 8'00001000
    139:     4 23'--1-1----0------------1   ->     4 8'00001000
    140:     5 23'--00011----------------   ->     0 8'00000100
    141:     5 23'--010-1----------------   ->     0 8'00000100
    142:     5 23'--1-0------------------   ->     0 8'00000100
    143:     5 23'--0---0---------------0   ->     1 8'00000100
    144:     5 23'--00-01---------------0   ->     1 8'00000100
    145:     5 23'--00111---------------0   ->     1 8'00000100
    146:     5 23'--011-1---------------0   ->     1 8'00000100
    147:     5 23'--1-1-----------------0   ->     1 8'00000100
    148:     5 23'--0---011-------------1   ->     1 8'00000100
    149:     5 23'--00-0111-------------1   ->     1 8'00000100
    150:     5 23'--0011111-------------1   ->     1 8'00000100
    151:     5 23'--011-111-------------1   ->     1 8'00000100
    152:     5 23'--1-1--11-------------1   ->     1 8'00000100
    153:     5 23'--0---0-0-------------1   ->     5 8'00000100
    154:     5 23'--00-01-0-------------1   ->     5 8'00000100
    155:     5 23'--00111-0-------------1   ->     5 8'00000100
    156:     5 23'--011-1-0-------------1   ->     5 8'00000100
    157:     5 23'--1-1---0-------------1   ->     5 8'00000100
    158:     5 23'--0---001-------------1   ->     5 8'00000100
    159:     5 23'--00-0101-------------1   ->     5 8'00000100
    160:     5 23'--0011101-------------1   ->     5 8'00000100
    161:     5 23'--011-101-------------1   ->     5 8'00000100
    162:     5 23'--1-1--01-------------1   ->     5 8'00000100
    163:     6 23'--00011----------------   ->     0 8'00000010
    164:     6 23'--010-1----------------   ->     0 8'00000010
    165:     6 23'--1-0------------------   ->     0 8'00000010
    166:     6 23'--0---0---------------0   ->     1 8'00000010
    167:     6 23'--00-01---------------0   ->     1 8'00000010
    168:     6 23'--00111---------------0   ->     1 8'00000010
    169:     6 23'--011-1---------------0   ->     1 8'00000010
    170:     6 23'--1-1-----------------0   ->     1 8'00000010
    171:     6 23'--0---011-------------1   ->     1 8'00000010
    172:     6 23'--00-0111-------------1   ->     1 8'00000010
    173:     6 23'--0011111-------------1   ->     1 8'00000010
    174:     6 23'--011-111-------------1   ->     1 8'00000010
    175:     6 23'--1-1--11-------------1   ->     1 8'00000010
    176:     6 23'--0---0-0-------------1   ->     6 8'00000010
    177:     6 23'--00-01-0-------------1   ->     6 8'00000010
    178:     6 23'--00111-0-------------1   ->     6 8'00000010
    179:     6 23'--011-1-0-------------1   ->     6 8'00000010
    180:     6 23'--1-1---0-------------1   ->     6 8'00000010
    181:     6 23'--0---001-------------1   ->     6 8'00000010
    182:     6 23'--00-0101-------------1   ->     6 8'00000010
    183:     6 23'--0011101-------------1   ->     6 8'00000010
    184:     6 23'--011-101-------------1   ->     6 8'00000010
    185:     6 23'--1-1--01-------------1   ->     6 8'00000010

-------------------------------------

FSM `$fsm$\soc.cpu.mem_wordsize$5275' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.mem_wordsize$5275 (\soc.cpu.mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc.cpu.resetn
    1: \soc.cpu.mem_do_rdata
    2: \soc.cpu.mem_do_wdata
    3: \soc.cpu.instr_lw
    4: \soc.cpu.instr_sb
    5: \soc.cpu.instr_sh
    6: \soc.cpu.instr_sw
    7: $flatten\soc.\cpu.$eq$picorv32.v:1308$1009_Y
    8: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y
    9: $flatten\soc.\cpu.$logic_or$picorv32.v:1881$1168_Y
   10: $flatten\soc.\cpu.$logic_or$picorv32.v:1882$1169_Y
   11: $flatten\soc.\cpu.$procmux$1735_CMP
   12: $flatten\soc.\cpu.$procmux$1736_CMP

  Output signals:
    0: $flatten\soc.\cpu.$eq$picorv32.v:1918$1180_Y
    1: $flatten\soc.\cpu.$eq$picorv32.v:1925$1187_Y
    2: $flatten\soc.\cpu.$procmux$4363_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'-1001----0-01   ->     0 3'001
      2:     0 13'-1--1----1-01   ->     0 3'001
      3:     0 13'-1--1------11   ->     0 3'001
      4:     0 13'1---1-000-0-1   ->     0 3'001
      5:     0 13'1---1-1---0-1   ->     0 3'001
      6:     0 13'1---1-----1-1   ->     0 3'001
      7:     0 13'00---0------1   ->     0 3'001
      8:     0 13'-----1------1   ->     0 3'001
      9:     0 13'-1--0-------1   ->     0 3'001
     10:     0 13'1---0-------1   ->     0 3'001
     11:     0 13'-1-11------01   ->     1 3'001
     12:     0 13'1---1---1-0-1   ->     1 3'001
     13:     0 13'-11-1------01   ->     2 3'001
     14:     0 13'1---1--1--0-1   ->     2 3'001
     15:     1 13'-1--1----1-01   ->     0 3'100
     16:     1 13'1---1-1---0-1   ->     0 3'100
     17:     1 13'-----1------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'-1001----0-01   ->     1 3'100
     20:     1 13'-1-11------01   ->     1 3'100
     21:     1 13'-1--1------11   ->     1 3'100
     22:     1 13'1---1-000-0-1   ->     1 3'100
     23:     1 13'1---1---1-0-1   ->     1 3'100
     24:     1 13'1---1-----1-1   ->     1 3'100
     25:     1 13'00---0------1   ->     1 3'100
     26:     1 13'-1--0-------1   ->     1 3'100
     27:     1 13'1---0-------1   ->     1 3'100
     28:     1 13'-11-1------01   ->     2 3'100
     29:     1 13'1---1--1--0-1   ->     2 3'100
     30:     2 13'-1--1----1-01   ->     0 3'010
     31:     2 13'1---1-1---0-1   ->     0 3'010
     32:     2 13'-----1------1   ->     0 3'010
     33:     2 13'-1-11------01   ->     1 3'010
     34:     2 13'1---1---1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'-1001----0-01   ->     2 3'010
     37:     2 13'-11-1------01   ->     2 3'010
     38:     2 13'-1--1------11   ->     2 3'010
     39:     2 13'1---1-000-0-1   ->     2 3'010
     40:     2 13'1---1--1--0-1   ->     2 3'010
     41:     2 13'1---1-----1-1   ->     2 3'010
     42:     2 13'00---0------1   ->     2 3'010
     43:     2 13'-1--0-------1   ->     2 3'010
     44:     2 13'1---0-------1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc.spimemio.state$5280' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.spimemio.state$5280 (\soc.spimemio.state):

  Number of input signals:    8
  Number of output signals:  13
  Number of state bits:      13

  Input signals:
    0: \soc.spimemio.dout_valid
    1: \soc.spimemio.jump
    2: \soc.spimemio.config_cont
    3: $flatten\soc.\spimemio.$logic_or$spimemio.v:211$525_Y
    4: $flatten\soc.\spimemio.$logic_and$spimemio.v:282$538_Y
    5: $flatten\soc.\spimemio.$logic_or$spimemio.v:310$539_Y
    6: $flatten\soc.\spimemio.$logic_or$spimemio.v:350$543_Y
    7: \soc.spimemio.xfer.din_ready

  Output signals:
    0: $flatten\soc.\spimemio.$procmux$4430_CMP
    1: $flatten\soc.\spimemio.$procmux$4433_CMP
    2: $flatten\soc.\spimemio.$procmux$4444_CMP
    3: $flatten\soc.\spimemio.$procmux$4447_CMP
    4: $flatten\soc.\spimemio.$procmux$4450_CMP
    5: $flatten\soc.\spimemio.$procmux$4453_CMP
    6: $flatten\soc.\spimemio.$procmux$4456_CMP
    7: $flatten\soc.\spimemio.$procmux$4459_CMP
    8: $flatten\soc.\spimemio.$procmux$4462_CMP
    9: $flatten\soc.\spimemio.$procmux$4467_CMP
   10: $flatten\soc.\spimemio.$procmux$4470_CMP
   11: $flatten\soc.\spimemio.$procmux$4476_CMP
   12: $flatten\soc.\spimemio.$procmux$4482_CMP

  State encoding:
    0: 13'------------1  <RESET STATE>
    1: 13'-----------1-
    2: 13'----------1--
    3: 13'---------1---
    4: 13'--------1----
    5: 13'-------1-----
    6: 13'------1------
    7: 13'-----1-------
    8: 13'----1--------
    9: 13'---1---------
   10: 13'--1----------
   11: 13'-1-----------
   12: 13'1------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'0---0-0-   ->     0 13'1000000000000
      1:     0 8'----1---   ->     0 13'1000000000000
      2:     0 8'----001-   ->     2 13'1000000000000
      3:     0 8'1---0-0-   ->     7 13'1000000000000
      4:     0 8'----011-   ->     9 13'1000000000000
      5:     1 8'----1---   ->     0 13'0000001000000
      6:     1 8'0---0-0-   ->     1 13'0000001000000
      7:     1 8'----001-   ->     2 13'0000001000000
      8:     1 8'1---0-0-   ->     8 13'0000001000000
      9:     1 8'----011-   ->     9 13'0000001000000
     10:     2 8'----1---   ->     0 13'0010000000000
     11:     2 8'0---0-0-   ->     2 13'0010000000000
     12:     2 8'----001-   ->     2 13'0010000000000
     13:     2 8'1---0-0-   ->     9 13'0010000000000
     14:     2 8'----011-   ->     9 13'0010000000000
     15:     3 8'----1---   ->     0 13'0000000000100
     16:     3 8'----001-   ->     2 13'0000000000100
     17:     3 8'-0--0-0-   ->     3 13'0000000000100
     18:     3 8'01--0-0-   ->     3 13'0000000000100
     19:     3 8'11--0-0-   ->     8 13'0000000000100
     20:     3 8'----011-   ->     9 13'0000000000100
     21:     4 8'----1---   ->     0 13'0100000000000
     22:     4 8'----001-   ->     2 13'0100000000000
     23:     4 8'0---0-0-   ->     4 13'0100000000000
     24:     4 8'----011-   ->     9 13'0100000000000
     25:     4 8'1---0-0-   ->    10 13'0100000000000
     26:     5 8'----1---   ->     0 13'0000000010000
     27:     5 8'----001-   ->     2 13'0000000010000
     28:     5 8'0---0-0-   ->     5 13'0000000010000
     29:     5 8'----011-   ->     9 13'0000000010000
     30:     5 8'1---0-0-   ->    11 13'0000000010000
     31:     6 8'----1---   ->     0 13'0000100000000
     32:     6 8'----001-   ->     2 13'0000100000000
     33:     6 8'0---0-0-   ->     6 13'0000100000000
     34:     6 8'----011-   ->     9 13'0000100000000
     35:     6 8'1---0-0-   ->    12 13'0000100000000
     36:     7 8'----1---   ->     0 13'0000000000010
     37:     7 8'----001-   ->     2 13'0000000000010
     38:     7 8'----0-01   ->     4 13'0000000000010
     39:     7 8'----0-00   ->     7 13'0000000000010
     40:     7 8'----011-   ->     9 13'0000000000010
     41:     8 8'----1---   ->     0 13'0000000100000
     42:     8 8'----001-   ->     2 13'0000000100000
     43:     8 8'1---0-0-   ->     5 13'0000000100000
     44:     8 8'0---0-0-   ->     8 13'0000000100000
     45:     8 8'----011-   ->     9 13'0000000100000
     46:     9 8'----1---   ->     0 13'0001000000000
     47:     9 8'----001-   ->     2 13'0001000000000
     48:     9 8'1--10-0-   ->     6 13'0001000000000
     49:     9 8'---00-0-   ->     9 13'0001000000000
     50:     9 8'0--10-0-   ->     9 13'0001000000000
     51:     9 8'----011-   ->     9 13'0001000000000
     52:    10 8'----1---   ->     0 13'0000000000001
     53:    10 8'----0-01   ->     2 13'0000000000001
     54:    10 8'----001-   ->     2 13'0000000000001
     55:    10 8'----011-   ->     9 13'0000000000001
     56:    10 8'----0-00   ->    10 13'0000000000001
     57:    11 8'----1---   ->     0 13'0000000001000
     58:    11 8'----001-   ->     2 13'0000000001000
     59:    11 8'1---0-0-   ->     3 13'0000000001000
     60:    11 8'----011-   ->     9 13'0000000001000
     61:    11 8'0---0-0-   ->    11 13'0000000001000
     62:    12 8'----1---   ->     0 13'0000010000000
     63:    12 8'1-1-0-0-   ->     1 13'0000010000000
     64:    12 8'----001-   ->     2 13'0000010000000
     65:    12 8'1-0-0-0-   ->     8 13'0000010000000
     66:    12 8'----011-   ->     9 13'0000010000000
     67:    12 8'0---0-0-   ->    12 13'0000010000000

-------------------------------------

8.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$5265' from module `\top'.
Mapping FSM `$fsm$\soc.cpu.mem_wordsize$5275' from module `\top'.
Mapping FSM `$fsm$\soc.spimemio.state$5280' from module `\top'.

8.13. Executing OPT pass (performing simple optimizations).

8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~18 debug messages>

8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~144 debug messages>
Removed a total of 48 cells.

8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $flatten\soc.\cpu.$procmux$2359.
    dead port 2/5 on $pmux $flatten\soc.\cpu.$procmux$2823.
    dead port 1/3 on $pmux $flatten\soc.\cpu.$procmux$3029.
Removed 3 multiplexer ports.
<suppressed ~258 debug messages>

8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5247: { \soc.cpu.cpu_state [6:3] \soc.cpu.cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5231: { \soc.cpu.cpu_state [6:2] \soc.cpu.cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5157: { \soc.cpu.cpu_state [6:4] \soc.cpu.cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5155: \soc.cpu.cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5153: { \soc.cpu.cpu_state [6] \soc.cpu.cpu_state [4:0] }
  Optimizing cells in module \top.
Performed a total of 5 changes.

8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$5148 ($dff) from module top (D = { $procmux$4871_Y $procmux$4878_Y $procmux$4885_Y $procmux$4892_Y }, Q = \gpio_out, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6088 ($sdff) from module top (D = \soc.cpu.mem_wdata [7:0], Q = \gpio_out [7:0]).
Adding EN signal on $auto$ff.cc:262:slice$6088 ($sdff) from module top (D = \soc.cpu.mem_wdata [15:8], Q = \gpio_out [15:8]).
Adding EN signal on $auto$ff.cc:262:slice$6088 ($sdff) from module top (D = \soc.cpu.mem_wdata [23:16], Q = \gpio_out [23:16]).
Adding EN signal on $auto$ff.cc:262:slice$6088 ($sdff) from module top (D = \soc.cpu.mem_wdata [31:24], Q = \gpio_out [31:24]).
Adding EN signal on $procdff$5147 ($dff) from module top (D = $procmux$4899_Y, Q = \iomem_rdata).
Adding SRST signal on $auto$ff.cc:262:slice$6101 ($dffe) from module top (D = $procmux$4897_Y, Q = \iomem_rdata, rval = 0).
Adding EN signal on $procdff$5146 ($dff) from module top (D = $procmux$4906_Y, Q = \iomem_ready).
Adding SRST signal on $auto$ff.cc:262:slice$6107 ($dffe) from module top (D = $procmux$4904_Y, Q = \iomem_ready, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4947 ($dff) from module top (D = \soc.spimemio.xfer.fetch, Q = \soc.spimemio.xfer.last_fetch, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4946 ($dff) from module top (D = \soc.spimemio.xfer.next_fetch, Q = \soc.spimemio.xfer.fetch, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4945 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1341_Y, Q = \soc.spimemio.xfer.xfer_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6113 ($sdff) from module top (D = \soc.spimemio.din_tag, Q = \soc.spimemio.xfer.xfer_tag).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4944 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1346_Y, Q = \soc.spimemio.xfer.xfer_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6115 ($sdff) from module top (D = \soc.spimemio.din_rd, Q = \soc.spimemio.xfer.xfer_rd).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4943 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1351_Y, Q = \soc.spimemio.xfer.xfer_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6117 ($sdff) from module top (D = \soc.spimemio.din_qspi, Q = \soc.spimemio.xfer.xfer_qspi).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4941 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1364_Y, Q = \soc.spimemio.xfer.dummy_count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6119 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1364_Y, Q = \soc.spimemio.xfer.dummy_count).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4940 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1374_Y [3], Q = \soc.spimemio.xfer.count [3], rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4940 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1372_Y [2:0], Q = \soc.spimemio.xfer.count [2:0], rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6124 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$2\next_count[3:0] [2:0], Q = \soc.spimemio.xfer.count [2:0]).
Adding EN signal on $auto$ff.cc:262:slice$6123 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1374_Y [3], Q = \soc.spimemio.xfer.count [3]).
Adding EN signal on $flatten\soc.\spimemio.\xfer.$procdff$4939 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$2\next_ibuffer[7:0], Q = \soc.spimemio.xfer.ibuffer).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4938 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1387_Y, Q = \soc.spimemio.xfer.xfer_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6160 ($sdff) from module top (D = \soc.spimemio.xfer.din_ddr, Q = \soc.spimemio.xfer.xfer_ddr).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4937 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1392_Y, Q = \soc.spimemio.xfer.xfer_dspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6162 ($sdff) from module top (D = \soc.spimemio.xfer.din_dspi, Q = \soc.spimemio.xfer.xfer_dspi).
Adding EN signal on $flatten\soc.\spimemio.\xfer.$procdff$4936 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1402_Y, Q = \soc.spimemio.xfer.obuffer).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4935 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1410_Y, Q = \soc.spimemio.xfer.flash_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6181 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1410_Y, Q = \soc.spimemio.xfer.flash_clk).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$4934 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1417_Y, Q = \soc.spimemio.xfer.flash_csb, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6189 ($sdff) from module top (D = 1'0, Q = \soc.spimemio.xfer.flash_csb).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5129 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4674_Y, Q = \soc.spimemio.config_do, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6191 ($sdff) from module top (D = \soc.cpu.mem_wdata [3:0], Q = \soc.spimemio.config_do).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5128 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4679_Y, Q = \soc.spimemio.config_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6193 ($sdff) from module top (D = \soc.cpu.mem_wdata [4], Q = \soc.spimemio.config_clk).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5127 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4684_Y, Q = \soc.spimemio.config_csb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6195 ($sdff) from module top (D = \soc.cpu.mem_wdata [5], Q = \soc.spimemio.config_csb).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5126 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4689_Y, Q = \soc.spimemio.config_oe, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6197 ($sdff) from module top (D = \soc.cpu.mem_wdata [11:8], Q = \soc.spimemio.config_oe).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5125 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4694_Y, Q = \soc.spimemio.config_dummy, rval = 4'1000).
Adding EN signal on $auto$ff.cc:262:slice$6199 ($sdff) from module top (D = \soc.cpu.mem_wdata [19:16], Q = \soc.spimemio.config_dummy).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5124 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4699_Y, Q = \soc.spimemio.config_cont, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6201 ($sdff) from module top (D = \soc.cpu.mem_wdata [20], Q = \soc.spimemio.config_cont).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5123 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4704_Y, Q = \soc.spimemio.config_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6203 ($sdff) from module top (D = \soc.cpu.mem_wdata [21], Q = \soc.spimemio.config_qspi).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5122 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4709_Y, Q = \soc.spimemio.config_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6205 ($sdff) from module top (D = \soc.cpu.mem_wdata [22], Q = \soc.spimemio.config_ddr).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5121 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4714_Y, Q = \soc.spimemio.config_en, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6207 ($sdff) from module top (D = \soc.cpu.mem_wdata [31], Q = \soc.spimemio.config_en).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5120 ($dff) from module top (D = $flatten\soc.\spimemio.$logic_or$spimemio.v:100$503_Y, Q = \soc.spimemio.softreset, rval = 1'1).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5114 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4503_Y, Q = \soc.spimemio.rd_inc).
Adding SRST signal on $auto$ff.cc:262:slice$6210 ($dffe) from module top (D = $flatten\soc.\spimemio.$procmux$4491_Y, Q = \soc.spimemio.rd_inc, rval = 1'0).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5113 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4510_Y, Q = \soc.spimemio.rd_wait).
Adding SRST signal on $auto$ff.cc:262:slice$6220 ($dffe) from module top (D = $flatten\soc.\spimemio.$procmux$4508_Y, Q = \soc.spimemio.rd_wait, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5112 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4515_Y, Q = \soc.spimemio.rd_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6228 ($sdff) from module top (D = 1'1, Q = \soc.spimemio.rd_valid).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5111 ($dff) from module top (D = $flatten\soc.\spimemio.$ternary$spimemio.v:226$536_Y [23:0], Q = \soc.spimemio.rd_addr).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5110 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [7:0]).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5110 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [15:8]).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5110 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [23:16]).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5109 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4574_Y, Q = \soc.spimemio.din_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6252 ($sdff) from module top (D = 1'1, Q = \soc.spimemio.din_rd).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5108 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4595_Y, Q = \soc.spimemio.din_ddr, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5107 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4614_Y, Q = \soc.spimemio.din_qspi, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5105 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4624_Y, Q = \soc.spimemio.din_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6260 ($sdff) from module top (D = $flatten\soc.\spimemio.$procmux$4624_Y, Q = \soc.spimemio.din_tag).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5104 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4643_Y, Q = \soc.spimemio.din_data).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5103 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4531_Y, Q = \soc.spimemio.din_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$5102 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$4429_Y, Q = \soc.spimemio.xfer_resetn, rval = 1'0).
Adding EN signal on $flatten\soc.\spimemio.$procdff$5101 ($dff) from module top (D = { \soc.spimemio.xfer.ibuffer \soc.spimemio.buffer }, Q = \soc.spimemio.rdata).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5139 ($dff) from module top (D = { $flatten\soc.\simpleuart.$procmux$4816_Y $flatten\soc.\simpleuart.$procmux$4821_Y $flatten\soc.\simpleuart.$procmux$4826_Y $flatten\soc.\simpleuart.$procmux$4831_Y }, Q = \soc.simpleuart.cfg_divider, rval = 1).
Adding EN signal on $auto$ff.cc:262:slice$6288 ($sdff) from module top (D = \soc.cpu.mem_wdata [7:0], Q = \soc.simpleuart.cfg_divider [7:0]).
Adding EN signal on $auto$ff.cc:262:slice$6288 ($sdff) from module top (D = \soc.cpu.mem_wdata [15:8], Q = \soc.simpleuart.cfg_divider [15:8]).
Adding EN signal on $auto$ff.cc:262:slice$6288 ($sdff) from module top (D = \soc.cpu.mem_wdata [23:16], Q = \soc.simpleuart.cfg_divider [23:16]).
Adding EN signal on $auto$ff.cc:262:slice$6288 ($sdff) from module top (D = \soc.cpu.mem_wdata [31:24], Q = \soc.simpleuart.cfg_divider [31:24]).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5138 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4777_Y, Q = \soc.simpleuart.recv_buf_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5137 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4785_Y, Q = \soc.simpleuart.recv_buf_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6294 ($sdff) from module top (D = \soc.simpleuart.recv_pattern, Q = \soc.simpleuart.recv_buf_data).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5136 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4793_Y, Q = \soc.simpleuart.recv_pattern, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6298 ($sdff) from module top (D = { \UART_RX \soc.simpleuart.recv_pattern [7:1] }, Q = \soc.simpleuart.recv_pattern).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5135 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4763_Y, Q = \soc.simpleuart.recv_divcnt, rval = 0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5134 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4805_Y, Q = \soc.simpleuart.recv_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6305 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$4805_Y, Q = \soc.simpleuart.recv_state).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5133 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4733_Y, Q = \soc.simpleuart.send_dummy, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6317 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$4733_Y, Q = \soc.simpleuart.send_dummy).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5132 ($dff) from module top (D = $flatten\soc.\simpleuart.$add$simpleuart.v:112$483_Y, Q = \soc.simpleuart.send_divcnt, rval = 0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5131 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4744_Y, Q = \soc.simpleuart.send_bitcnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6326 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$4744_Y, Q = \soc.simpleuart.send_bitcnt).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5130 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4749_Y [9], Q = \soc.simpleuart.send_pattern [9], rval = 1'1).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$5130 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$4752_Y [8:0], Q = \soc.simpleuart.send_pattern [8:0], rval = 9'111111111).
Adding EN signal on $auto$ff.cc:262:slice$6335 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$4752_Y [8:0], Q = \soc.simpleuart.send_pattern [8:0]).
Adding EN signal on $auto$ff.cc:262:slice$6330 ($sdff) from module top (D = 1'1, Q = \soc.simpleuart.send_pattern [9]).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5100 ($dff) from module top (D = $flatten\soc.$logic_and$picosoc.v:206$438_Y, Q = \soc.cpu.last_mem_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5099 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4389_Y, Q = \soc.cpu.mem_la_firstword_reg, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$5098 ($dff) from module top (D = \soc.cpu.mem_rdata_latched [6:0], Q = \soc.cpu.mem_rdata_q [6:0]).
Adding EN signal on $flatten\soc.\cpu.$procdff$5096 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4021_Y, Q = \soc.cpu.mem_16bit_buffer).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5095 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4042_Y, Q = \soc.cpu.prefetched_high_word, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6359 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4033_Y, Q = \soc.cpu.prefetched_high_word).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5094 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4056_Y, Q = \soc.cpu.mem_la_secondword, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6369 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4052_Y, Q = \soc.cpu.mem_la_secondword).
Adding EN signal on $flatten\soc.\cpu.$procdff$5093 ($dff) from module top (D = $flatten\soc.\cpu.$0\mem_state[1:0], Q = \soc.cpu.mem_state).
Adding EN signal on $flatten\soc.\cpu.$procdff$5092 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4091_Y, Q = \soc.cpu.mem_wstrb).
Adding EN signal on $flatten\soc.\cpu.$procdff$5091 ($dff) from module top (D = \soc.cpu.mem_la_wdata, Q = \soc.cpu.mem_wdata).
Adding EN signal on $flatten\soc.\cpu.$procdff$5090 ($dff) from module top (D = \soc.cpu.mem_la_addr, Q = \soc.cpu.mem_addr).
Adding EN signal on $flatten\soc.\cpu.$procdff$5088 ($dff) from module top (D = $flatten\soc.\cpu.$0\mem_valid[0:0], Q = \soc.cpu.mem_valid).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5072 ($dff) from module top (D = $flatten\soc.\cpu.$reduce_or$picorv32.v:862$714_Y, Q = \soc.cpu.is_compare, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$5071 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3424_Y, Q = \soc.cpu.is_alu_reg_reg).
Adding EN signal on $flatten\soc.\cpu.$procdff$5070 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3460_Y, Q = \soc.cpu.is_alu_reg_imm).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5068 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3472_Y, Q = \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6421 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3470_Y, Q = \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5065 ($dff) from module top (D = $flatten\soc.\cpu.$reduce_or$picorv32.v:858$710_Y, Q = \soc.cpu.is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$5064 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1107$963_Y, Q = \soc.cpu.is_sll_srl_sra).
Adding EN signal on $flatten\soc.\cpu.$procdff$5063 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3485_Y, Q = \soc.cpu.is_sb_sh_sw).
Adding EN signal on $flatten\soc.\cpu.$procdff$5062 ($dff) from module top (D = $flatten\soc.\cpu.$logic_or$picorv32.v:1098$952_Y, Q = \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $flatten\soc.\cpu.$procdff$5061 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1092$943_Y, Q = \soc.cpu.is_slli_srli_srai).
Adding EN signal on $flatten\soc.\cpu.$procdff$5060 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3505_Y, Q = \soc.cpu.is_lb_lh_lw_lbu_lhu).
Adding EN signal on $flatten\soc.\cpu.$procdff$5058 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3509_Y, Q = \soc.cpu.compressed_instr).
Adding EN signal on $flatten\soc.\cpu.$procdff$5057 ($dff) from module top (D = { $flatten\soc.\cpu.$procmux$3342_Y $flatten\soc.\cpu.$procmux$3555_Y $flatten\soc.\cpu.$procmux$3350_Y $flatten\soc.\cpu.$procmux$3318_Y $flatten\soc.\cpu.$procmux$3338_Y $flatten\soc.\cpu.$procmux$3322_Y $flatten\soc.\cpu.$procmux$3326_Y $flatten\soc.\cpu.$procmux$3334_Y $flatten\soc.\cpu.$procmux$3346_Y $flatten\soc.\cpu.$procmux$3330_Y 1'0 }, Q = \soc.cpu.decoded_imm_j).
Adding EN signal on $flatten\soc.\cpu.$procdff$5056 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3518_Y, Q = \soc.cpu.decoded_imm).
Adding EN signal on $flatten\soc.\cpu.$procdff$5055 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3551_Y, Q = \soc.cpu.decoded_rs2).
Adding EN signal on $flatten\soc.\cpu.$procdff$5054 ($dff) from module top (D = { $flatten\soc.\cpu.$procmux$3314_Y $flatten\soc.\cpu.$procmux$3401_Y }, Q = \soc.cpu.decoded_rs1).
Adding EN signal on $flatten\soc.\cpu.$procdff$5053 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3602_Y, Q = \soc.cpu.decoded_rd).
Adding EN signal on $flatten\soc.\cpu.$procdff$5052 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1090$930_Y, Q = \soc.cpu.instr_timer).
Adding EN signal on $flatten\soc.\cpu.$procdff$5051 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:870$728_Y, Q = \soc.cpu.instr_waitirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5050 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1089$926_Y, Q = \soc.cpu.instr_maskirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5049 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:869$724_Y, Q = \soc.cpu.instr_retirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5048 ($dff) from module top (D = 1'0, Q = \soc.cpu.instr_setq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5047 ($dff) from module top (D = 1'0, Q = \soc.cpu.instr_getq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5045 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1082$903_Y, Q = \soc.cpu.instr_rdinstrh).
Adding EN signal on $flatten\soc.\cpu.$procdff$5044 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1081$899_Y, Q = \soc.cpu.instr_rdinstr).
Adding EN signal on $flatten\soc.\cpu.$procdff$5043 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1079$895_Y, Q = \soc.cpu.instr_rdcycleh).
Adding EN signal on $flatten\soc.\cpu.$procdff$5042 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1077$887_Y, Q = \soc.cpu.instr_rdcycle).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5041 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3628_Y, Q = \soc.cpu.instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6445 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1075$879_Y, Q = \soc.cpu.instr_and).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5040 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3632_Y, Q = \soc.cpu.instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6447 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1074$875_Y, Q = \soc.cpu.instr_or).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5039 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3636_Y, Q = \soc.cpu.instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6449 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1073$871_Y, Q = \soc.cpu.instr_sra).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5038 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3640_Y, Q = \soc.cpu.instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6451 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1072$867_Y, Q = \soc.cpu.instr_srl).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5037 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3644_Y, Q = \soc.cpu.instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1071$863_Y, Q = \soc.cpu.instr_xor).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5036 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3648_Y, Q = \soc.cpu.instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6455 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1070$859_Y, Q = \soc.cpu.instr_sltu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5035 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3652_Y, Q = \soc.cpu.instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6457 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1069$855_Y, Q = \soc.cpu.instr_slt).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5034 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3656_Y, Q = \soc.cpu.instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6459 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1068$851_Y, Q = \soc.cpu.instr_sll).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5033 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3660_Y, Q = \soc.cpu.instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6461 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1067$847_Y, Q = \soc.cpu.instr_sub).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5032 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3664_Y, Q = \soc.cpu.instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6463 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1066$843_Y, Q = \soc.cpu.instr_add).
Adding EN signal on $flatten\soc.\cpu.$procdff$5031 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1064$839_Y, Q = \soc.cpu.instr_srai).
Adding EN signal on $flatten\soc.\cpu.$procdff$5030 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1063$835_Y, Q = \soc.cpu.instr_srli).
Adding EN signal on $flatten\soc.\cpu.$procdff$5029 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1062$831_Y, Q = \soc.cpu.instr_slli).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5028 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3674_Y, Q = \soc.cpu.instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6468 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1060$827_Y, Q = \soc.cpu.instr_andi).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5027 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3678_Y, Q = \soc.cpu.instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6470 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1059$825_Y, Q = \soc.cpu.instr_ori).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5026 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3682_Y, Q = \soc.cpu.instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6472 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1058$823_Y, Q = \soc.cpu.instr_xori).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5025 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3686_Y, Q = \soc.cpu.instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6474 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1057$821_Y, Q = \soc.cpu.instr_sltiu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5024 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3690_Y, Q = \soc.cpu.instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6476 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1056$819_Y, Q = \soc.cpu.instr_slti).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5023 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3694_Y, Q = \soc.cpu.instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6478 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1055$817_Y, Q = \soc.cpu.instr_addi).
Adding EN signal on $flatten\soc.\cpu.$procdff$5022 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1053$815_Y, Q = \soc.cpu.instr_sw).
Adding EN signal on $flatten\soc.\cpu.$procdff$5021 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1052$813_Y, Q = \soc.cpu.instr_sh).
Adding EN signal on $flatten\soc.\cpu.$procdff$5020 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1051$811_Y, Q = \soc.cpu.instr_sb).
Adding EN signal on $flatten\soc.\cpu.$procdff$5019 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1049$809_Y, Q = \soc.cpu.instr_lhu).
Adding EN signal on $flatten\soc.\cpu.$procdff$5018 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1048$807_Y, Q = \soc.cpu.instr_lbu).
Adding EN signal on $flatten\soc.\cpu.$procdff$5017 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1047$805_Y, Q = \soc.cpu.instr_lw).
Adding EN signal on $flatten\soc.\cpu.$procdff$5016 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1046$803_Y, Q = \soc.cpu.instr_lh).
Adding EN signal on $flatten\soc.\cpu.$procdff$5015 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1045$801_Y, Q = \soc.cpu.instr_lb).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5014 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3714_Y, Q = \soc.cpu.instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6488 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1043$799_Y, Q = \soc.cpu.instr_bgeu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5013 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3718_Y, Q = \soc.cpu.instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6490 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1042$797_Y, Q = \soc.cpu.instr_bltu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5012 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3722_Y, Q = \soc.cpu.instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6492 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1041$795_Y, Q = \soc.cpu.instr_bge).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5011 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3726_Y, Q = \soc.cpu.instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6494 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1040$793_Y, Q = \soc.cpu.instr_blt).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5010 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3730_Y, Q = \soc.cpu.instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6496 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1039$791_Y, Q = \soc.cpu.instr_bne).
Adding SRST signal on $flatten\soc.\cpu.$procdff$5009 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3734_Y, Q = \soc.cpu.instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6498 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1038$789_Y, Q = \soc.cpu.instr_beq).
Adding EN signal on $flatten\soc.\cpu.$procdff$5008 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3747_Y, Q = \soc.cpu.instr_jalr).
Adding EN signal on $flatten\soc.\cpu.$procdff$5007 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3759_Y, Q = \soc.cpu.instr_jal).
Adding EN signal on $flatten\soc.\cpu.$procdff$5006 ($dff) from module top (D = $flatten\soc.\cpu.$eq$picorv32.v:866$717_Y, Q = \soc.cpu.instr_auipc).
Adding EN signal on $flatten\soc.\cpu.$procdff$5005 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3779_Y, Q = \soc.cpu.instr_lui).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4998 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2155_Y, Q = \soc.cpu.do_waitirq, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4994 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2405_Y, Q = \soc.cpu.latched_rd, rval = 5'00010).
Adding EN signal on $auto$ff.cc:262:slice$6513 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2405_Y, Q = \soc.cpu.latched_rd).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4993 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2431_Y, Q = \soc.cpu.latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6521 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2431_Y, Q = \soc.cpu.latched_is_lb).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4992 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2444_Y, Q = \soc.cpu.latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6531 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2444_Y, Q = \soc.cpu.latched_is_lh).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4991 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2457_Y, Q = \soc.cpu.latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6541 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2457_Y, Q = \soc.cpu.latched_is_lu).
Adding EN signal on $flatten\soc.\cpu.$procdff$4989 ($dff) from module top (D = \soc.cpu.compressed_instr, Q = \soc.cpu.latched_compr).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4988 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2502_Y, Q = \soc.cpu.latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6556 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2502_Y, Q = \soc.cpu.latched_branch).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4987 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2538_Y, Q = \soc.cpu.latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6564 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2538_Y, Q = \soc.cpu.latched_stalu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4986 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2545_Y, Q = \soc.cpu.latched_store, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6572 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2545_Y, Q = \soc.cpu.latched_store).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4982 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2599_Y, Q = \soc.cpu.irq_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6580 ($sdff) from module top (D = $flatten\soc.\cpu.$ternary$picorv32.v:1535$1081_Y, Q = \soc.cpu.irq_state).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4975 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2169_Y, Q = \soc.cpu.decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4972 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2809_Y, Q = \soc.cpu.mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6587 ($sdff) from module top (D = 1'0, Q = \soc.cpu.mem_do_wdata).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4971 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2813_Y, Q = \soc.cpu.mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6589 ($sdff) from module top (D = 1'0, Q = \soc.cpu.mem_do_rdata).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4970 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2884_Y, Q = \soc.cpu.mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6591 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2884_Y, Q = \soc.cpu.mem_do_rinst).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4969 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2909_Y, Q = \soc.cpu.mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6605 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1568$1095_Y, Q = \soc.cpu.mem_do_prefetch).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4967 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2957_Y, Q = \soc.cpu.timer, rval = 0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4965 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2975_Y, Q = \soc.cpu.irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$6616 ($sdff) from module top (D = \soc.cpu.cpuregs_rs1, Q = \soc.cpu.irq_mask).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4964 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2994_Y, Q = \soc.cpu.irq_active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6620 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$2994_Y, Q = \soc.cpu.irq_active).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4963 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3019_Y, Q = \soc.cpu.irq_delay, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6630 ($sdff) from module top (D = \soc.cpu.irq_active, Q = \soc.cpu.irq_delay).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4961 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2303_Y, Q = \soc.cpu.reg_out, rval = 8192).
Adding EN signal on $flatten\soc.\cpu.$procdff$4960 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3032_Y, Q = \soc.cpu.reg_op2).
Adding EN signal on $flatten\soc.\cpu.$procdff$4959 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3055_Y [31], Q = \soc.cpu.reg_op1 [31]).
Adding EN signal on $flatten\soc.\cpu.$procdff$4959 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3055_Y [30:0], Q = \soc.cpu.reg_op1 [30:0]).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4958 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3119_Y, Q = \soc.cpu.reg_next_pc, rval = 1048576).
Adding EN signal on $auto$ff.cc:262:slice$6684 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3117_Y, Q = \soc.cpu.reg_next_pc).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4957 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3131_Y, Q = \soc.cpu.reg_pc, rval = 1048576).
Adding EN signal on $auto$ff.cc:262:slice$6686 ($sdff) from module top (D = $flatten\soc.\cpu.$3\current_pc[31:0], Q = \soc.cpu.reg_pc).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4956 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3151_Y, Q = \soc.cpu.count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6688 ($sdff) from module top (D = $flatten\soc.\cpu.$add$picorv32.v:1559$1091_Y, Q = \soc.cpu.count_instr).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4955 ($dff) from module top (D = $flatten\soc.\cpu.$add$picorv32.v:1428$1037_Y, Q = \soc.cpu.count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\soc.\cpu.$procdff$4950 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$2387_Y, Q = \soc.cpu.trap, rval = 1'0).
Adding SRST signal on $flatten\display.$procdff$5144 ($dff) from module top (D = $flatten\display.$sub$display.v:63$451_Y [23:0], Q = \display.second_timer_state, rval = 24'101101110001101011111111).
Adding EN signal on $flatten\display.$procdff$5143 ($dff) from module top (D = $flatten\display.$not$display.v:58$450_Y, Q = \display.second_toggle).
Adding SRST signal on $flatten\display.$procdff$5141 ($dff) from module top (D = $flatten\display.$sub$display.v:93$454_Y [23:0], Q = \display.refresh_timer_state, rval = 24'000000000000111100000000).
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$6343 ($sdffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6440 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6439 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6430 ($dffe) from module top.

8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 297 unused cells and 357 unused wires.
<suppressed ~299 debug messages>

8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~29 debug messages>

8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~157 debug messages>

8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:254:combine_resets$6586: { $flatten\soc.\cpu.$logic_or$picorv32.v:1852$1160_Y $auto$fsm_map.cc:102:implement_pattern_cache$5518 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6683: { $auto$opt_dff.cc:194:make_patterns_logic$6666 $auto$opt_dff.cc:194:make_patterns_logic$6668 $auto$opt_dff.cc:194:make_patterns_logic$6670 $auto$opt_dff.cc:194:make_patterns_logic$6672 $auto$opt_dff.cc:194:make_patterns_logic$6674 $auto$opt_dff.cc:194:make_patterns_logic$6676 $auto$opt_dff.cc:194:make_patterns_logic$6678 $auto$opt_dff.cc:194:make_patterns_logic$6680 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6664: { $auto$opt_dff.cc:194:make_patterns_logic$6649 $auto$opt_dff.cc:194:make_patterns_logic$6651 $auto$opt_dff.cc:194:make_patterns_logic$6653 $auto$opt_dff.cc:194:make_patterns_logic$6655 $auto$opt_dff.cc:194:make_patterns_logic$6657 $auto$opt_dff.cc:194:make_patterns_logic$6659 $auto$opt_dff.cc:194:make_patterns_logic$6661 $auto$opt_dff.cc:194:make_patterns_logic$6645 $auto$opt_dff.cc:194:make_patterns_logic$6643 $auto$opt_dff.cc:194:make_patterns_logic$6647 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6641: { \soc.cpu.cpu_state [2] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6614: { $auto$rtlil.cc:2369:Not$6612 $auto$rtlil.cc:2369:Not$6610 $auto$rtlil.cc:2369:Not$6608 \soc.cpu.cpu_state [1] \soc.cpu.decoder_trigger \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6555: { $auto$rtlil.cc:2369:Not$6553 \soc.cpu.cpu_state [1] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6105: { $auto$opt_dff.cc:194:make_patterns_logic$6102 \reset_cnt }
  Optimizing cells in module \top.
Performed a total of 7 changes.

8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~165 debug messages>
Removed a total of 55 cells.

8.13.13. Executing OPT_DFF pass (perform DFF optimizations).

8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.13.16. Rerunning OPT passes. (Maybe there is more to do..)

8.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~157 debug messages>

8.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.13.20. Executing OPT_DFF pass (perform DFF optimizations).

8.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.13.23. Finished OPT passes. (There is nothing left to do.)

8.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$flatten\display.$auto$mem.cc:319:emit$1281 ($flatten\display.$auto$proc_rom.cc:150:do_switch$1279).
Removed top 5 bits (of 6) from port B of cell top.$add$top.v:64$386 ($add).
Removed top 31 bits (of 32) from port A of cell top.$or$top.v:118$391 ($or).
Removed top 30 bits (of 32) from port B of cell top.$or$top.v:118$391 ($or).
Removed top 30 bits (of 32) from port Y of cell top.$or$top.v:118$391 ($or).
Removed top 6 bits (of 8) from port B of cell top.$eq$top.v:141$396 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:154$400 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5300 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5304 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$4846_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\display.$procmux$4840_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$sub$display.v:93$454 ($sub).
Removed top 8 bits (of 32) from port Y of cell top.$flatten\display.$sub$display.v:93$454 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$sub$display.v:63$451 ($sub).
Removed top 8 bits (of 32) from port Y of cell top.$flatten\display.$sub$display.v:63$451 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6138 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5349 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5351 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5353 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5357 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5361 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5365 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5978 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5985 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5994 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6142 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6144 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6172 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6170 ($ne).
Removed top 1 bits (of 9) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6168 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6059 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6051 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5320 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5576 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5589 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5529 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5597 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5580 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5593 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5535 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5457 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5461 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5465 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5469 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5477 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5481 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5485 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5489 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5497 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5501 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5505 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5509 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5517 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5523 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5449 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5568 ($eq).
Removed top 3 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5572 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5601 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5609 ($eq).
Removed top 5 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5613 ($eq).
Removed top 4 bits (of 13) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5617 ($eq).
Removed top 3 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5621 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5625 ($eq).
Removed top 5 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5650 ($eq).
Removed top 5 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5654 ($eq).
Removed top 4 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5658 ($eq).
Removed top 3 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5662 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5666 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5670 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5674 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5678 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5682 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5690 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5694 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5698 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5702 ($eq).
Removed top 5 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5711 ($eq).
Removed top 5 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5715 ($eq).
Removed top 4 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5719 ($eq).
Removed top 3 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5723 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5727 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5324 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5328 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5332 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5340 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5342 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5772 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5776 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5780 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5784 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5792 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5796 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5800 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5804 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5812 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5816 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5820 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5824 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5937 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5445 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:74$474 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:99$480 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:99$480 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:112$483 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$sub$simpleuart.v:132$491 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\soc.\simpleuart.$sub$simpleuart.v:132$491 ($sub).
Removed top 1 bits (of 10) from mux cell top.$flatten\soc.\simpleuart.$procmux$4749 ($mux).
Removed top 1 bits (of 10) from mux cell top.$flatten\soc.\simpleuart.$procmux$4752 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\simpleuart.$procmux$4767_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:221$526 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:222$528 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:223$530 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:224$532 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\spimemio.$add$spimemio.v:226$534 ($add).
Removed top 7 bits (of 32) from port Y of cell top.$flatten\soc.\spimemio.$add$spimemio.v:226$534 ($add).
Removed top 8 bits (of 32) from mux cell top.$flatten\soc.\spimemio.$ternary$spimemio.v:226$536 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\soc.\spimemio.$ternary$spimemio.v:316$541 ($mux).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5441 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5437 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5429 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5425 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5421 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5417 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6411 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6381 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\spimemio.$procmux$4658_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5308 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\spimemio.\xfer.$procmux$1431_CMP0 ($eq).
Removed top 28 bits (of 32) from mux cell top.$flatten\soc.\spimemio.\xfer.$ternary$spimemio.v:567$1267 ($mux).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250 ($sub).
Removed top 1 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238 ($sub).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$1231 ($sub).
Removed top 3 bits (of 4) from port A of cell top.$flatten\soc.\cpu.$shl$picorv32.v:419$638 ($shl).
Removed top 3 bits (of 5) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:465$643 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:478$645 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:486$647 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:488$649 ($eq).
Removed top 1 bits (of 7) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:491$653 ($mux).
Removed top 30 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:617$697 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:865$716 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:866$717 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:869$722 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:869$723 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:870$727 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:873$731 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:874$732 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:875$733 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:876$734 ($eq).
Removed top 28 bits (of 32) from port A of cell top.$flatten\soc.\cpu.$add$picorv32.v:906$747 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$add$picorv32.v:906$747 ($add).
Removed top 28 bits (of 32) from port A of cell top.$flatten\soc.\cpu.$add$picorv32.v:910$748 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$add$picorv32.v:910$748 ($add).
Removed top 2 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1039$790 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1047$804 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1057$820 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1064$838 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1089$924 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1089$925 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1090$929 ($eq).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1312$1010 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1312$1011 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1428$1037 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1438$1042 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1536$1079 ($eq).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1541$1082 ($mux).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1547$1087 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1547$1088 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1559$1091 ($add).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$ge$picorv32.v:1830$1143 ($ge).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1837$1151 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1837$1151 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1845$1158 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1845$1158 ($sub).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5409 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5405 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5401 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5312 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$4360_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell top.$flatten\soc.\cpu.$procmux$4341 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5397 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5389 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5385 ($eq).
Removed top 3 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5381 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5377 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6577 ($ne).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5369 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6596 ($ne).
Removed top 4 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6600 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$3307_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$3309_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$3312_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell top.$flatten\soc.\cpu.$procmux$3370 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$3594_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$4026_CMP0 ($eq).
Removed top 18 bits (of 32) from port B of cell top.$flatten\soc.$lt$picosoc.v:206$439 ($lt).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$lt$picosoc.v:159$429 ($lt).
Removed top 18 bits (of 32) from port B of cell top.$flatten\soc.$ge$picosoc.v:159$427 ($ge).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:121$410 ($eq).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:118$408 ($eq).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:115$406 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\soc.$gt$picosoc.v:110$404 ($gt).
Removed top 7 bits (of 32) from port B of cell top.$flatten\soc.\spimemio.$ne$spimemio.v:72$498 ($ne).
Removed top 8 bits (of 32) from wire top.$flatten\display.$sub$display.v:63$451_Y.
Removed top 8 bits (of 32) from wire top.$flatten\display.$sub$display.v:93$454_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$add$picorv32.v:906$747_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$add$picorv32.v:910$748_Y.
Removed top 2 bits (of 4) from wire top.$flatten\soc.\cpu.$procmux$3370_Y.
Removed top 2 bits (of 6) from wire top.$flatten\soc.\cpu.$procmux$4341_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$sub$picorv32.v:1837$1151_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$sub$picorv32.v:1845$1158_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1312$1010_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1541$1082_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1547$1087_Y.
Removed top 28 bits (of 32) from wire top.$flatten\soc.\simpleuart.$add$simpleuart.v:99$480_Y.
Removed top 1 bits (of 10) from wire top.$flatten\soc.\simpleuart.$procmux$4749_Y.
Removed top 1 bits (of 10) from wire top.$flatten\soc.\simpleuart.$procmux$4752_Y.
Removed top 28 bits (of 32) from wire top.$flatten\soc.\simpleuart.$sub$simpleuart.v:132$491_Y.
Removed top 7 bits (of 32) from wire top.$flatten\soc.\spimemio.$add$spimemio.v:226$534_Y.
Removed top 8 bits (of 32) from wire top.$flatten\soc.\spimemio.$ternary$spimemio.v:226$536_Y.
Removed top 3 bits (of 4) from wire top.$flatten\soc.\spimemio.\xfer.$reduce_or$spimemio.v:471$1230_Y.
Removed top 28 bits (of 32) from wire top.$flatten\soc.\spimemio.\xfer.$ternary$spimemio.v:567$1267_Y.
Removed top 5 bits (of 6) from wire top.$logic_not$top.v:64$385_Y.
Removed top 30 bits (of 32) from wire top.gpio_in.

8.15. Executing PEEPOPT pass (run peephole optimizers).

8.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

8.17. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$1277 ($memrd):
    Found 2 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$5176 $auto$opt_reduce.cc:134:opt_pmux$5166 $auto$opt_reduce.cc:134:opt_pmux$5160 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$1025_Y \soc.cpu.is_slli_srli_srai \soc.cpu.resetn }.
    Found 1 candidates: $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$1276
    Analyzing resource sharing with $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$1276 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$1023_Y.
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$1277: { $auto$opt_reduce.cc:134:opt_pmux$5176 $auto$opt_reduce.cc:134:opt_pmux$5166 $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$1025_Y } = 3'001
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$1277: { $auto$opt_reduce.cc:134:opt_pmux$5160 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$1025_Y \soc.cpu.is_slli_srli_srai \soc.cpu.resetn } = 5'01101
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$1276: $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$1023_Y = 1'1
      Size of SAT problem: 0 cells, 147 variables, 325 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:134:opt_pmux$5176 $auto$opt_reduce.cc:134:opt_pmux$5166 $auto$opt_reduce.cc:134:opt_pmux$5160 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$1025_Y $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$1023_Y \soc.cpu.is_slli_srli_srai \soc.cpu.resetn } = 8'00001100
  Analyzing resource sharing options for $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$1276 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$1023_Y.
    No candidates found.

8.18. Executing TECHMAP pass (map to technology primitives).

8.18.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

8.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~244 debug messages>

8.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:64$386 ($add).
  creating $macc model for $flatten\display.$sub$display.v:63$451 ($sub).
  creating $macc model for $flatten\display.$sub$display.v:93$454 ($sub).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1235$1210 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1312$1011 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1428$1037 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1547$1088 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1559$1091 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1564$1092 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1801$1137 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1864$1162 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:382$621 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:906$747 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:910$748 ($add).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1235$1209 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1438$1042 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1837$1151 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1845$1158 ($sub).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:112$483 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:74$474 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:99$480 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$sub$simpleuart.v:132$491 ($sub).
  creating $macc model for $flatten\soc.\spimemio.$add$spimemio.v:226$534 ($add).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$1231 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$1260 ($sub).
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$1260.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$1231.
  creating $alu model for $macc $flatten\soc.\spimemio.$add$spimemio.v:226$534.
  creating $alu model for $macc $flatten\soc.\simpleuart.$sub$simpleuart.v:132$491.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:99$480.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:74$474.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:112$483.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1845$1158.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1837$1151.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1438$1042.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1235$1209.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:910$748.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:906$747.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:382$621.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1864$1162.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1801$1137.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1564$1092.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1559$1091.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1547$1088.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1428$1037.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1312$1011.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1235$1210.
  creating $alu model for $macc $flatten\display.$sub$display.v:93$454.
  creating $alu model for $macc $flatten\display.$sub$display.v:63$451.
  creating $alu model for $macc $add$top.v:64$386.
  creating $alu model for $flatten\soc.$ge$picosoc.v:159$427 ($ge): new $alu
  creating $alu model for $flatten\soc.$gt$picosoc.v:110$404 ($gt): new $alu
  creating $alu model for $flatten\soc.$lt$picosoc.v:159$429 ($lt): new $alu
  creating $alu model for $flatten\soc.$lt$picosoc.v:206$439 ($lt): merged with $flatten\soc.$ge$picosoc.v:159$427.
  creating $alu model for $flatten\soc.\cpu.$ge$picorv32.v:1830$1143 ($ge): new $alu
  creating $alu model for $flatten\soc.\cpu.$lt$picorv32.v:1237$1213 ($lt): new $alu
  creating $alu model for $flatten\soc.\cpu.$lt$picorv32.v:1238$1214 ($lt): new $alu
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:130$489 ($gt): new $alu
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:84$477 ($gt): new $alu
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:90$478 ($gt): new $alu
  creating $alu model for $flatten\soc.$eq$picosoc.v:115$406 ($eq): merged with $flatten\soc.$lt$picosoc.v:159$429.
  creating $alu model for $flatten\soc.\cpu.$eq$picorv32.v:1236$1212 ($eq): merged with $flatten\soc.\cpu.$lt$picorv32.v:1238$1214.
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:90$478: $auto$alumacc.cc:485:replace_alu$6733
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:84$477: $auto$alumacc.cc:485:replace_alu$6738
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:130$489: $auto$alumacc.cc:485:replace_alu$6743
  creating $alu cell for $flatten\soc.\cpu.$ge$picorv32.v:1830$1143: $auto$alumacc.cc:485:replace_alu$6748
  creating $alu cell for $flatten\soc.$lt$picosoc.v:159$429, $flatten\soc.$eq$picosoc.v:115$406: $auto$alumacc.cc:485:replace_alu$6757
  creating $alu cell for $flatten\soc.$gt$picosoc.v:110$404: $auto$alumacc.cc:485:replace_alu$6768
  creating $alu cell for $flatten\soc.$ge$picosoc.v:159$427, $flatten\soc.$lt$picosoc.v:206$439: $auto$alumacc.cc:485:replace_alu$6773
  creating $alu cell for $add$top.v:64$386: $auto$alumacc.cc:485:replace_alu$6786
  creating $alu cell for $flatten\display.$sub$display.v:63$451: $auto$alumacc.cc:485:replace_alu$6789
  creating $alu cell for $flatten\display.$sub$display.v:93$454: $auto$alumacc.cc:485:replace_alu$6792
  creating $alu cell for $flatten\soc.\cpu.$lt$picorv32.v:1238$1214, $flatten\soc.\cpu.$eq$picorv32.v:1236$1212: $auto$alumacc.cc:485:replace_alu$6795
  creating $alu cell for $flatten\soc.\cpu.$lt$picorv32.v:1237$1213: $auto$alumacc.cc:485:replace_alu$6806
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1235$1210: $auto$alumacc.cc:485:replace_alu$6819
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1312$1011: $auto$alumacc.cc:485:replace_alu$6822
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1428$1037: $auto$alumacc.cc:485:replace_alu$6825
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1547$1088: $auto$alumacc.cc:485:replace_alu$6828
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1559$1091: $auto$alumacc.cc:485:replace_alu$6831
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1564$1092: $auto$alumacc.cc:485:replace_alu$6834
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1801$1137: $auto$alumacc.cc:485:replace_alu$6837
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1864$1162: $auto$alumacc.cc:485:replace_alu$6840
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:382$621: $auto$alumacc.cc:485:replace_alu$6843
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:906$747: $auto$alumacc.cc:485:replace_alu$6846
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:910$748: $auto$alumacc.cc:485:replace_alu$6849
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1235$1209: $auto$alumacc.cc:485:replace_alu$6852
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1438$1042: $auto$alumacc.cc:485:replace_alu$6855
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1837$1151: $auto$alumacc.cc:485:replace_alu$6858
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1845$1158: $auto$alumacc.cc:485:replace_alu$6861
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:112$483: $auto$alumacc.cc:485:replace_alu$6864
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:74$474: $auto$alumacc.cc:485:replace_alu$6867
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:99$480: $auto$alumacc.cc:485:replace_alu$6870
  creating $alu cell for $flatten\soc.\simpleuart.$sub$simpleuart.v:132$491: $auto$alumacc.cc:485:replace_alu$6873
  creating $alu cell for $flatten\soc.\spimemio.$add$spimemio.v:226$534: $auto$alumacc.cc:485:replace_alu$6876
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$1231: $auto$alumacc.cc:485:replace_alu$6879
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238: $auto$alumacc.cc:485:replace_alu$6882
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250: $auto$alumacc.cc:485:replace_alu$6885
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$1260: $auto$alumacc.cc:485:replace_alu$6888
  created 36 $alu and 0 $macc cells.

8.22. Executing OPT pass (performing simple optimizations).

8.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

8.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

8.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~156 debug messages>

8.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.22.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$6106 ($sdffce) from module top (D = 30'x, Q = \iomem_rdata [31:2], rval = 30'000000000000000000000000000000).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$6891 ($sdffce) from module top.

8.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 17 unused wires.
<suppressed ~2 debug messages>

8.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.22.9. Rerunning OPT passes. (Maybe there is more to do..)

8.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~156 debug messages>

8.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.22.13. Executing OPT_DFF pass (perform DFF optimizations).

8.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.22.16. Finished OPT passes. (There is nothing left to do.)

8.23. Executing MEMORY pass.

8.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.soc.cpu.cpuregs.regs write port 0.

8.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\display.$auto$proc_rom.cc:150:do_switch$1279'[0] in module `\top': no output FF found.
Checking read port `\soc.cpu.cpuregs.regs'[0] in module `\top': no output FF found.
Checking read port `\soc.cpu.cpuregs.regs'[1] in module `\top': no output FF found.
Checking read port address `$flatten\display.$auto$proc_rom.cc:150:do_switch$1279'[0] in module `\top': no address FF found.
Checking read port address `\soc.cpu.cpuregs.regs'[0] in module `\top': merged address FF to cell.
Checking read port address `\soc.cpu.cpuregs.regs'[1] in module `\top': merged address FF to cell.

8.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory top.soc.cpu.cpuregs.regs by address:

8.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\display.$auto$proc_rom.cc:150:do_switch$1279
mapping memory top.soc.cpu.cpuregs.regs via $__ICE40_RAM4K_
<suppressed ~71 debug messages>

8.26. Executing TECHMAP pass (map to technology primitives).

8.26.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

8.26.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

8.26.3. Continuing TECHMAP pass.
Using template $paramod$a1f6b5309207cf102bfb625dccbd224ad06df61d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~31 debug messages>

8.27. Executing ICE40_BRAMINIT pass.

8.28. Executing OPT pass (performing simple optimizations).

8.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~206 debug messages>

8.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

8.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1134:emulate_transparency$6916 ($dffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$6401 ($dffe) from module top (D = $flatten\soc.\cpu.$procmux$4121_Y, Q = \soc.cpu.mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$6373 ($dffe) from module top (D = $flatten\soc.\cpu.$procmux$4063_Y, Q = \soc.cpu.mem_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6232 ($dffe) from module top (D = $auto$wreduce.cc:455:run$6718 [1:0], Q = \soc.spimemio.rd_addr [1:0]).

8.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 24 unused cells and 210 unused wires.
<suppressed ~29 debug messages>

8.28.5. Rerunning OPT passes. (Removed registers in this run.)

8.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.28.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\soc.\cpu.$procdff$4962 ($dff) from module top (D = $flatten\soc.\cpu.$0\reg_sh[4:0] [1:0], Q = \soc.cpu.reg_sh [1:0]).

8.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.28.10. Rerunning OPT passes. (Removed registers in this run.)

8.28.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.28.13. Executing OPT_DFF pass (perform DFF optimizations).

8.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.28.15. Finished fast OPT passes.

8.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\display.$auto$proc_rom.cc:150:do_switch$1279 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

8.30. Executing OPT pass (performing simple optimizations).

8.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~142 debug messages>

8.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$7020: { $auto$rtlil.cc:2369:Not$6214 $auto$opt_dff.cc:194:make_patterns_logic$7017 $flatten\soc.\spimemio.$logic_and$spimemio.v:224$533_Y }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][6]$7065:
      Old ports: A=7'0001111, B=7'1110011, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [2] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [1:0] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][5]$7062:
      Old ports: A=7'1111110, B=7'1100111, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [6:4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [2:1] } = { 2'11 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][4]$7059:
      Old ports: A=7'1111111, B=7'1111100, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042 [0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042 [6:1] = { 5'11111 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][3]$7056:
      Old ports: A=7'1101111, B=7'0111000, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [3:1] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] 2'11 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][2]$7053:
      Old ports: A=7'1110100, B=7'1101101, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [3:1] } = { 2'11 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [0] 2'10 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][1]$7050:
      Old ports: A=7'1011011, B=7'1111001, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [1] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [6] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [4:2] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][0]$7047:
      Old ports: A=7'0111111, B=7'0110000, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [6:1] = { 3'011 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][3][7]$7068:
      Old ports: A=7'1001111, B=7'1001110, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$b$7046
      New ports: A=1'1, B=1'0, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$b$7046 [0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$b$7046 [6:1] = 6'100111
    Consolidated identical input bits for $pmux cell $flatten\soc.\cpu.$procmux$2295:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$flatten\soc.\cpu.$procmux$2295_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$flatten\soc.\cpu.$procmux$2295_Y [31:8]
      New connections: $flatten\soc.\cpu.$procmux$2295_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$2545: { \soc.cpu.cpu_state [3] $auto$opt_reduce.cc:134:opt_pmux$7072 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3055: { \soc.cpu.cpu_state [4] $auto$opt_reduce.cc:134:opt_pmux$7074 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3290: { $flatten\soc.\cpu.$procmux$3309_CMP $flatten\soc.\cpu.$procmux$3291_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3292: { $flatten\soc.\cpu.$procmux$3289_CMP $flatten\soc.\cpu.$procmux$3307_CMP }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3342:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$3342_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$flatten\soc.\cpu.$procmux$3342_Y [0]
      New connections: $flatten\soc.\cpu.$procmux$3342_Y [11:1] = { $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] $flatten\soc.\cpu.$procmux$3342_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3370:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:455:run$6706 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$6706 [1]
      New connections: $auto$wreduce.cc:455:run$6706 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3548:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$3548_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$3548_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$3548_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3555:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$3555_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$3555_Y [7:1]
      New connections: $flatten\soc.\cpu.$procmux$3555_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3580:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3580_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3580_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$3580_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3598:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$3598_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$3598_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$3598_Y [4] = 1'0
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4063: { $flatten\soc.\cpu.$procmux$4026_CMP $auto$opt_reduce.cc:134:opt_pmux$7076 }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4215:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$flatten\soc.\cpu.$procmux$4215_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $flatten\soc.\cpu.$procmux$4215_Y [4] $flatten\soc.\cpu.$procmux$4215_Y [0] }
      New connections: $flatten\soc.\cpu.$procmux$4215_Y [3:1] = { $flatten\soc.\cpu.$procmux$4215_Y [0] $flatten\soc.\cpu.$procmux$4215_Y [0] $flatten\soc.\cpu.$procmux$4215_Y [0] }
    Consolidated identical input bits for $pmux cell $flatten\soc.\cpu.$procmux$4357:
      Old ports: A={ 24'000000000000000000000000 \soc.cpu.mem_rdata [7:0] }, B={ 24'000000000000000000000000 \soc.cpu.mem_rdata [15:8] 24'000000000000000000000000 \soc.cpu.mem_rdata [23:16] 24'000000000000000000000000 \soc.cpu.mem_rdata [31:24] }, Y=$flatten\soc.\cpu.$3\mem_rdata_word[31:0]
      New ports: A=\soc.cpu.mem_rdata [7:0], B={ \soc.cpu.mem_rdata [15:8] \soc.cpu.mem_rdata [23:16] \soc.cpu.mem_rdata [31:24] }, Y=$flatten\soc.\cpu.$3\mem_rdata_word[31:0] [7:0]
      New connections: $flatten\soc.\cpu.$3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4366:
      Old ports: A={ 16'0000000000000000 \soc.cpu.mem_rdata [15:0] }, B={ 16'0000000000000000 \soc.cpu.mem_rdata [31:16] }, Y=$flatten\soc.\cpu.$2\mem_rdata_word[31:0]
      New ports: A=\soc.cpu.mem_rdata [15:0], B=\soc.cpu.mem_rdata [31:16], Y=$flatten\soc.\cpu.$2\mem_rdata_word[31:0] [15:0]
      New connections: $flatten\soc.\cpu.$2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $flatten\soc.\cpu.$procmux$4382:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1312$1010:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:455:run$6710 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$6710 [2:1]
      New connections: $auto$wreduce.cc:455:run$6710 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1536$1080:
      Old ports: A=2'00, B=2'10, Y=$flatten\soc.\cpu.$ternary$picorv32.v:1536$1080_Y
      New ports: A=1'0, B=1'1, Y=$flatten\soc.\cpu.$ternary$picorv32.v:1536$1080_Y [1]
      New connections: $flatten\soc.\cpu.$ternary$picorv32.v:1536$1080_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1541$1082:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:455:run$6711 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$6711 [2] $auto$wreduce.cc:455:run$6711 [0] }
      New connections: $auto$wreduce.cc:455:run$6711 [1] = $auto$wreduce.cc:455:run$6711 [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1547$1087:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:455:run$6712 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$6712 [2:1]
      New connections: $auto$wreduce.cc:455:run$6712 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:382$622:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $flatten\soc.\cpu.$add$picorv32.v:382$621_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$flatten\soc.\cpu.$add$picorv32.v:382$621_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:411$637:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [2] $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [0] }
      New connections: { $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [3] $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [1] } = { $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [2] $flatten\soc.\cpu.$ternary$picorv32.v:411$637_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:491$653:
      Old ports: A=6'000000, B=6'100000, Y=$flatten\soc.\cpu.$ternary$picorv32.v:491$653_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\soc.\cpu.$ternary$picorv32.v:491$653_Y [5]
      New connections: $flatten\soc.\cpu.$ternary$picorv32.v:491$653_Y [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:617$697:
      Old ports: A=2'11, B=2'00, Y=$flatten\soc.\cpu.$procmux$4069_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc.\cpu.$procmux$4069_Y [0]
      New connections: $flatten\soc.\cpu.$procmux$4069_Y [1] = $flatten\soc.\cpu.$procmux$4069_Y [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\simpleuart.$ternary$simpleuart.v:53$469:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.$procmux$4624:
      Old ports: A=4'0000, B=20'00000001001000110100, Y=$flatten\soc.\spimemio.$procmux$4624_Y
      New ports: A=3'000, B=15'000001010011100, Y=$flatten\soc.\spimemio.$procmux$4624_Y [2:0]
      New connections: $flatten\soc.\spimemio.$procmux$4624_Y [3] = 1'0
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$4624: { \soc.spimemio.state [8] \soc.spimemio.state [5] \soc.spimemio.state [11] \soc.spimemio.state [3] }
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.$procmux$4655:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$flatten\soc.\spimemio.$procmux$4655_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $flatten\soc.\spimemio.$procmux$4655_Y [6] $flatten\soc.\spimemio.$procmux$4655_Y [4:1] }
      New connections: { $flatten\soc.\spimemio.$procmux$4655_Y [7] $flatten\soc.\spimemio.$procmux$4655_Y [5] $flatten\soc.\spimemio.$procmux$4655_Y [0] } = { $flatten\soc.\spimemio.$procmux$4655_Y [3] $flatten\soc.\spimemio.$procmux$4655_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$ternary$spimemio.v:316$541:
      Old ports: A=7'1111111, B=7'0100101, Y=$flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [6:0]
      New ports: A=1'1, B=1'0, Y=$flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1]
      New connections: { $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [6:2] $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [0] } = { $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] 2'11 }
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.\xfer.$procmux$1425:
      Old ports: A=\soc.spimemio.xfer.count, B={ $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$flatten\soc.\spimemio.\xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$1250_Y [3:1], Y=$flatten\soc.\spimemio.\xfer.$5\next_count[3:0] [3:1]
      New connections: $flatten\soc.\spimemio.\xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.\xfer.$procmux$1466:
      Old ports: A=\soc.spimemio.xfer.count, B={ $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$flatten\soc.\spimemio.\xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$1238_Y [3:2], Y=$flatten\soc.\spimemio.\xfer.$4\next_count[3:0] [3:2]
      New connections: $flatten\soc.\spimemio.\xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1554: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$7078 }
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1564:
      Old ports: A={ \soc.spimemio.xfer.obuffer [5:0] 2'00 }, B={ \soc.spimemio.xfer.obuffer [6:0] 1'0 \soc.spimemio.xfer.obuffer [3:0] 4'0000 \soc.spimemio.xfer.obuffer [3:0] 4'0000 }, Y=\soc.spimemio.xfer.next_obuffer
      New ports: A={ \soc.spimemio.xfer.obuffer [5:0] 1'0 }, B={ \soc.spimemio.xfer.obuffer [6:0] \soc.spimemio.xfer.obuffer [3:0] 3'000 \soc.spimemio.xfer.obuffer [3:0] 3'000 }, Y=\soc.spimemio.xfer.next_obuffer [7:1]
      New connections: \soc.spimemio.xfer.next_obuffer [0] = 1'0
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$1564: { $flatten\soc.\spimemio.\xfer.$procmux$1432_CMP $auto$opt_reduce.cc:134:opt_pmux$7080 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$7071: { \soc.cpu.cpu_state [6] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [2] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$7044:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$b$7046, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034
      New ports: A={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$a$7045 [2] 1'1 }, B={ 3'101 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][3]$b$7046 [0] }, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [6] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [2] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [1] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$b$7034 [2] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$7041:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033
      New ports: A={ 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$a$7042 [0] }, B={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [3] 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][2]$b$7043 [0] }, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033 [1:0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033 [6:4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033 [2] } = { 2'11 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][1]$a$7033 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$7038:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$b$7031
      New ports: A={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [0] 2'10 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$a$7039 [0] }, B={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [4] 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][1]$b$7040 [0] }, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$b$7031 [4:0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$b$7031 [6:5] = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$b$7031 [2] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$7035:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$a$7030
      New ports: A={ 2'01 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$a$7036 [0] }, B={ 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [5] 1'0 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][2][0]$b$7037 [1] 1'1 }, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$a$7030 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$a$7030 [2:0] }
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$a$7030 [4:3] = { 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$1279$rdmux[0][1][0]$a$7030 [0] }
    Consolidated identical input bits for $mux cell $flatten\soc.$ternary$picosoc.v:130$421:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$flatten\soc.$ternary$picosoc.v:130$421_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$flatten\soc.$ternary$picosoc.v:130$421_Y [8:0]
      New connections: $flatten\soc.$ternary$picosoc.v:130$421_Y [31:9] = { $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] $flatten\soc.$ternary$picosoc.v:130$421_Y [8] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3582:
      Old ports: A=$flatten\soc.\cpu.$procmux$3580_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3582_Y
      New ports: A=$flatten\soc.\cpu.$procmux$3580_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3582_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$3582_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$procmux$4645:
      Old ports: A={ 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$flatten\soc.\spimemio.$procmux$4645_Y
      New ports: A={ 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$541_Y [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$flatten\soc.\spimemio.$procmux$4645_Y [5:0]
      New connections: $flatten\soc.\spimemio.$procmux$4645_Y [7:6] = $flatten\soc.\spimemio.$procmux$4645_Y [5:4]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3584:
      Old ports: A=$flatten\soc.\cpu.$procmux$3582_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3584_Y
      New ports: A=$flatten\soc.\cpu.$procmux$3582_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$3584_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$3584_Y [4] = 1'0
  Optimizing cells in module \top.
Performed a total of 52 changes.

8.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

8.30.6. Executing OPT_DFF pass (perform DFF optimizations).

8.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

8.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.30.9. Rerunning OPT passes. (Maybe there is more to do..)

8.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~147 debug messages>

8.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3106:
      Old ports: A=$flatten\soc.\cpu.$add$picorv32.v:1547$1088_Y, B={ $flatten\soc.\cpu.$add$picorv32.v:1564$1092_Y [31:1] $auto$alumacc.cc:501:replace_alu$6835 [0] }, Y=$flatten\soc.\cpu.$procmux$3106_Y
      New ports: A=$flatten\soc.\cpu.$add$picorv32.v:1547$1088_Y [31:1], B=$flatten\soc.\cpu.$add$picorv32.v:1564$1092_Y [31:1], Y=$flatten\soc.\cpu.$procmux$3106_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$3106_Y [0] = $auto$alumacc.cc:501:replace_alu$6835 [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3112:
      Old ports: A={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$6835 [0] }, B=$flatten\soc.\cpu.$add$picorv32.v:1547$1088_Y, Y=$flatten\soc.\cpu.$procmux$3112_Y
      New ports: A=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], B=$flatten\soc.\cpu.$add$picorv32.v:1547$1088_Y [31:1], Y=$flatten\soc.\cpu.$procmux$3112_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$3112_Y [0] = $auto$alumacc.cc:501:replace_alu$6835 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3108:
      Old ports: A={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$6835 [0] }, B=$flatten\soc.\cpu.$procmux$3106_Y, Y=$flatten\soc.\cpu.$procmux$3108_Y
      New ports: A=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], B=$flatten\soc.\cpu.$procmux$3106_Y [31:1], Y=$flatten\soc.\cpu.$procmux$3108_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$3108_Y [0] = $auto$alumacc.cc:501:replace_alu$6835 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3114:
      Old ports: A=$flatten\soc.\cpu.$procmux$3108_Y, B=$flatten\soc.\cpu.$procmux$3112_Y, Y=$flatten\soc.\cpu.$procmux$3114_Y
      New ports: A=$flatten\soc.\cpu.$procmux$3108_Y [31:1], B=$flatten\soc.\cpu.$procmux$3112_Y [31:1], Y=$flatten\soc.\cpu.$procmux$3114_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$3114_Y [0] = $auto$alumacc.cc:501:replace_alu$6835 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$3117:
      Old ports: A=$flatten\soc.\cpu.$procmux$3114_Y, B={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$6835 [0] }, Y=$flatten\soc.\cpu.$procmux$3117_Y
      New ports: A=$flatten\soc.\cpu.$procmux$3114_Y [31:1], B=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], Y=$flatten\soc.\cpu.$procmux$3117_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$3117_Y [0] = $auto$alumacc.cc:501:replace_alu$6835 [0]
  Optimizing cells in module \top.
Performed a total of 5 changes.

8.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$6164 ($dffe) from module top (D = \soc.spimemio.din_data [0], Q = \soc.spimemio.xfer.obuffer [0], rval = 1'0).
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6261 ($sdffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6396 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6396 ($dffe) from module top.

8.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

8.30.16. Rerunning OPT passes. (Maybe there is more to do..)

8.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~147 debug messages>

8.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$procmux$4648:
      Old ports: A={ \soc.cpu.mem_addr [7:2] 2'00 }, B=8'00000000, Y=$flatten\soc.\spimemio.$procmux$4648_Y
      New ports: A=\soc.cpu.mem_addr [7:2], B=6'000000, Y=$flatten\soc.\spimemio.$procmux$4648_Y [7:2]
      New connections: $flatten\soc.\spimemio.$procmux$4648_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$ternary$spimemio.v:226$536:
      Old ports: A={ \soc.cpu.mem_addr [23:2] 2'00 }, B={ $auto$wreduce.cc:455:run$6717 [23:2] 2'x }, Y=$auto$wreduce.cc:455:run$6718 [23:0]
      New ports: A={ \soc.cpu.mem_addr [23:2] 1'0 }, B={ $auto$wreduce.cc:455:run$6717 [23:2] 1'x }, Y={ $auto$wreduce.cc:455:run$6718 [23:2] $auto$wreduce.cc:455:run$6718 [0] }
      New connections: $auto$wreduce.cc:455:run$6718 [1] = $auto$wreduce.cc:455:run$6718 [0]
  Optimizing cells in module \top.
Performed a total of 2 changes.

8.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6114 ($sdffe) from module top.

8.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

8.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.23. Rerunning OPT passes. (Maybe there is more to do..)

8.30.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~147 debug messages>

8.30.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.30.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $flatten\soc.\spimemio.\xfer.$procdff$4949 ($dff) from module top.

8.30.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.30.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.30. Rerunning OPT passes. (Maybe there is more to do..)

8.30.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~147 debug messages>

8.30.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.30.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.30.34. Executing OPT_DFF pass (perform DFF optimizations).

8.30.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.30.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.30.37. Finished OPT passes. (There is nothing left to do.)

8.31. Executing ICE40_WRAPCARRY pass (wrap carries).

8.32. Executing TECHMAP pass (map to technology primitives).

8.32.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.32.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

8.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using template $paramod$c9511eeb847f2aa95252b1013477609463f67ee0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$16349e5f556ea87a576d7d9941c668f31b6ef10b\_80_ice40_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_80_ice40_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$d901baf1fb63991ac0a40d2e3f4807d372bb57a2\_80_ice40_alu for cells of type $alu.
Using template $paramod$bdc78fe5225b43c64ccdf13e5eb67d9dcf228e8a\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_80_ice40_alu for cells of type $alu.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$24fb226dd75c9d3f6955ec2ad61d794776778cf6\_90_pmux for cells of type $pmux.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_80_ice40_alu for cells of type $alu.
Using template $paramod$91e5b74f11633b3386c40b03efcf15406a306835\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~3716 debug messages>

8.33. Executing OPT pass (performing simple optimizations).

8.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3759 debug messages>

8.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6363 debug messages>
Removed a total of 2121 cells.

8.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$12301 ($_DFFE_PP_) from module top (D = 1'x, Q = \soc.spimemio.rd_addr [0], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$26660 ($_SDFFCE_PN0P_) from module top.

8.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 616 unused cells and 4905 unused wires.
<suppressed ~617 debug messages>

8.33.5. Rerunning OPT passes. (Removed registers in this run.)

8.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

8.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.33.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$7334 ($_DFF_P_) from module top (D = $flatten\display.$procmux$4837.S [0], Q = \display.dd [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7333 ($_DFF_P_) from module top (D = $flatten\display.$procmux$4837.S [1], Q = \display.dd [0], rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$15310 ($_SDFFE_PN0P_) from module top (D = $flatten\soc.\cpu.$procmux$2038.B_AND_S [32], Q = \soc.cpu.reg_pc [0]).
Adding SRST signal on $auto$ff.cc:262:slice$15122 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [31], Q = \soc.cpu.irq_pending [31], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26668 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [31], Q = \soc.cpu.irq_pending [31]).
Adding SRST signal on $auto$ff.cc:262:slice$15121 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [30], Q = \soc.cpu.irq_pending [30], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26676 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [30], Q = \soc.cpu.irq_pending [30]).
Adding SRST signal on $auto$ff.cc:262:slice$15120 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [29], Q = \soc.cpu.irq_pending [29], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26684 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [29], Q = \soc.cpu.irq_pending [29]).
Adding SRST signal on $auto$ff.cc:262:slice$15119 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [28], Q = \soc.cpu.irq_pending [28], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26692 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [28], Q = \soc.cpu.irq_pending [28]).
Adding SRST signal on $auto$ff.cc:262:slice$15118 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [27], Q = \soc.cpu.irq_pending [27], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26700 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [27], Q = \soc.cpu.irq_pending [27]).
Adding SRST signal on $auto$ff.cc:262:slice$15117 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [26], Q = \soc.cpu.irq_pending [26], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26708 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [26], Q = \soc.cpu.irq_pending [26]).
Adding SRST signal on $auto$ff.cc:262:slice$15116 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [25], Q = \soc.cpu.irq_pending [25], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26716 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [25], Q = \soc.cpu.irq_pending [25]).
Adding SRST signal on $auto$ff.cc:262:slice$15115 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [24], Q = \soc.cpu.irq_pending [24], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26724 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [24], Q = \soc.cpu.irq_pending [24]).
Adding SRST signal on $auto$ff.cc:262:slice$15114 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [23], Q = \soc.cpu.irq_pending [23], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26732 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [23], Q = \soc.cpu.irq_pending [23]).
Adding SRST signal on $auto$ff.cc:262:slice$15113 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [22], Q = \soc.cpu.irq_pending [22], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26740 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [22], Q = \soc.cpu.irq_pending [22]).
Adding SRST signal on $auto$ff.cc:262:slice$15112 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [21], Q = \soc.cpu.irq_pending [21], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26748 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [21], Q = \soc.cpu.irq_pending [21]).
Adding SRST signal on $auto$ff.cc:262:slice$15111 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [20], Q = \soc.cpu.irq_pending [20], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26756 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [20], Q = \soc.cpu.irq_pending [20]).
Adding SRST signal on $auto$ff.cc:262:slice$15110 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [19], Q = \soc.cpu.irq_pending [19], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26764 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [19], Q = \soc.cpu.irq_pending [19]).
Adding SRST signal on $auto$ff.cc:262:slice$15109 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [18], Q = \soc.cpu.irq_pending [18], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26772 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [18], Q = \soc.cpu.irq_pending [18]).
Adding SRST signal on $auto$ff.cc:262:slice$15108 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [17], Q = \soc.cpu.irq_pending [17], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26780 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [17], Q = \soc.cpu.irq_pending [17]).
Adding SRST signal on $auto$ff.cc:262:slice$15107 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [16], Q = \soc.cpu.irq_pending [16], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26788 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [16], Q = \soc.cpu.irq_pending [16]).
Adding SRST signal on $auto$ff.cc:262:slice$15106 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [15], Q = \soc.cpu.irq_pending [15], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26796 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [15], Q = \soc.cpu.irq_pending [15]).
Adding SRST signal on $auto$ff.cc:262:slice$15105 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [14], Q = \soc.cpu.irq_pending [14], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26804 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [14], Q = \soc.cpu.irq_pending [14]).
Adding SRST signal on $auto$ff.cc:262:slice$15104 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [13], Q = \soc.cpu.irq_pending [13], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26812 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [13], Q = \soc.cpu.irq_pending [13]).
Adding SRST signal on $auto$ff.cc:262:slice$15103 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [12], Q = \soc.cpu.irq_pending [12], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26820 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [12], Q = \soc.cpu.irq_pending [12]).
Adding SRST signal on $auto$ff.cc:262:slice$15102 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [11], Q = \soc.cpu.irq_pending [11], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26828 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [11], Q = \soc.cpu.irq_pending [11]).
Adding SRST signal on $auto$ff.cc:262:slice$15101 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [10], Q = \soc.cpu.irq_pending [10], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26836 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [10], Q = \soc.cpu.irq_pending [10]).
Adding SRST signal on $auto$ff.cc:262:slice$15100 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [9], Q = \soc.cpu.irq_pending [9], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26844 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [9], Q = \soc.cpu.irq_pending [9]).
Adding SRST signal on $auto$ff.cc:262:slice$15099 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [8], Q = \soc.cpu.irq_pending [8], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26852 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [8], Q = \soc.cpu.irq_pending [8]).
Adding SRST signal on $auto$ff.cc:262:slice$15098 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [7], Q = \soc.cpu.irq_pending [7], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26860 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [7], Q = \soc.cpu.irq_pending [7]).
Adding SRST signal on $auto$ff.cc:262:slice$15097 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [6], Q = \soc.cpu.irq_pending [6], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26868 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [6], Q = \soc.cpu.irq_pending [6]).
Adding SRST signal on $auto$ff.cc:262:slice$15096 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [5], Q = \soc.cpu.irq_pending [5], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26876 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [5], Q = \soc.cpu.irq_pending [5]).
Adding SRST signal on $auto$ff.cc:262:slice$15095 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [4], Q = \soc.cpu.irq_pending [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26884 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [4], Q = \soc.cpu.irq_pending [4]).
Adding SRST signal on $auto$ff.cc:262:slice$15094 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [3], Q = \soc.cpu.irq_pending [3], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26892 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$1057_Y [3], Q = \soc.cpu.irq_pending [3]).
Adding SRST signal on $auto$ff.cc:262:slice$15092 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$procmux$1756.Y, Q = \soc.cpu.irq_pending [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$26900 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$procmux$1756.Y, Q = \soc.cpu.irq_pending [1]).
Adding SRST signal on $auto$ff.cc:262:slice$13652 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [31], Q = \soc.cpu.decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13651 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [30], Q = \soc.cpu.decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13650 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [29], Q = \soc.cpu.decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13649 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [28], Q = \soc.cpu.decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13648 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [27], Q = \soc.cpu.decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13647 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [26], Q = \soc.cpu.decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13646 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [25], Q = \soc.cpu.decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13645 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [24], Q = \soc.cpu.decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13644 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [23], Q = \soc.cpu.decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13643 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [22], Q = \soc.cpu.decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13642 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [21], Q = \soc.cpu.decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13641 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [20], Q = \soc.cpu.decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13640 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [19], Q = \soc.cpu.decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13639 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [18], Q = \soc.cpu.decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13638 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [17], Q = \soc.cpu.decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13637 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [16], Q = \soc.cpu.decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13636 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [15], Q = \soc.cpu.decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13635 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [14], Q = \soc.cpu.decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13634 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [13], Q = \soc.cpu.decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13633 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [12], Q = \soc.cpu.decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13632 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [11], Q = \soc.cpu.decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13631 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [10], Q = \soc.cpu.decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13630 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [9], Q = \soc.cpu.decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13629 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [8], Q = \soc.cpu.decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13628 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [7], Q = \soc.cpu.decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13627 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [6], Q = \soc.cpu.decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13626 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [5], Q = \soc.cpu.decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13625 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [4], Q = \soc.cpu.decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13624 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [3], Q = \soc.cpu.decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13623 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [2], Q = \soc.cpu.decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13622 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$3518.Y_B [1], Q = \soc.cpu.decoded_imm [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$11833 ($_SDFFE_PP0P_) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$1544.Y_B [0], Q = \soc.spimemio.xfer.count [0]).
Adding SRST signal on $auto$ff.cc:262:slice$11779 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [7], Q = \soc.spimemio.din_data [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11778 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [6], Q = \soc.spimemio.din_data [6], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11777 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [5], Q = \soc.spimemio.din_data [5], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11776 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [4], Q = \soc.spimemio.din_data [4], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11775 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [3], Q = \soc.spimemio.din_data [3], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11774 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [2], Q = \soc.spimemio.din_data [2], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11773 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [1], Q = \soc.spimemio.din_data [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11772 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$4643.Y_B [0], Q = \soc.spimemio.din_data [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$11741 ($_SDFF_PP0_) from module top (D = $flatten\soc.\spimemio.$procmux$4531.Y_B, Q = \soc.spimemio.din_valid, rval = 1'0).

8.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 132 unused cells and 38 unused wires.
<suppressed ~133 debug messages>

8.33.10. Rerunning OPT passes. (Removed registers in this run.)

8.33.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

8.33.13. Executing OPT_DFF pass (perform DFF optimizations).

8.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 57 unused wires.
<suppressed ~1 debug messages>

8.33.15. Finished fast OPT passes.

8.34. Executing ICE40_OPT pass (performing simple optimizations).

8.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6748.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6748.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6757.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6757.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6768.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6757.BB [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6773.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6757.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6789.slice[0].carry: CO=\display.second_timer_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6792.slice[0].carry: CO=\display.refresh_timer_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6825.slice[0].carry: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6831.slice[0].carry: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6855.slice[0].carry: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6858.slice[0].carry: CO=\soc.cpu.reg_sh [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6861.slice[0].carry: CO=\soc.cpu.reg_sh [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6864.slice[0].carry: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6867.slice[0].carry: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6870.slice[0].carry: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6873.slice[0].carry: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6876.slice[0].carry: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6876.slice[22].carry: CO=1'0

8.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~43 debug messages>

8.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.34.4. Executing OPT_DFF pass (perform DFF optimizations).

8.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

8.34.6. Rerunning OPT passes. (Removed registers in this run.)

8.34.7. Running ICE40 specific optimizations.

8.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.34.10. Executing OPT_DFF pass (perform DFF optimizations).

8.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.34.12. Finished OPT passes. (There is nothing left to do.)

8.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.36. Executing TECHMAP pass (map to technology primitives).

8.36.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1137 debug messages>

8.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

8.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$6789.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6792.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6825.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6831.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6855.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6858.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6861.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6864.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6867.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6870.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6873.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6876.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6876.slice[22].carry ($lut).

8.39. Executing ICE40_OPT pass (performing simple optimizations).

8.39.1. Running ICE40 specific optimizations.

8.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~531 debug messages>

8.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2739 debug messages>
Removed a total of 913 cells.

8.39.4. Executing OPT_DFF pass (perform DFF optimizations).

8.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6794 unused wires.
<suppressed ~1 debug messages>

8.39.6. Rerunning OPT passes. (Removed registers in this run.)

8.39.7. Running ICE40 specific optimizations.

8.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.39.10. Executing OPT_DFF pass (perform DFF optimizations).

8.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.39.12. Finished OPT passes. (There is nothing left to do.)

8.40. Executing TECHMAP pass (map to technology primitives).

8.40.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

8.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

8.41. Executing ABC pass (technology mapping using ABC).

8.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 7235 gates and 8810 wires to a netlist network with 1573 inputs and 1111 outputs.

8.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1843.
ABC: Participating nodes from both networks       =    3922.
ABC: Participating nodes from the first network   =    1863. (  66.75 % of nodes)
ABC: Participating nodes from the second network  =    2059. (  73.77 % of nodes)
ABC: Node pairs (any polarity)                    =    1857. (  66.54 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1440. (  51.59 % of names can be moved)
ABC: Total runtime =     0.12 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

8.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2790
ABC RESULTS:        internal signals:     6126
ABC RESULTS:           input signals:     1573
ABC RESULTS:          output signals:     1111
Removing temp directory.

8.42. Executing ICE40_WRAPCARRY pass (wrap carries).

8.43. Executing TECHMAP pass (map to technology primitives).

8.43.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 249 unused cells and 4679 unused wires.

8.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3350
  1-LUT              220
  2-LUT              428
  3-LUT             1188
  4-LUT             1514
  with \SB_CARRY    (#0)  544
  with \SB_CARRY    (#1)  546

Eliminating LUTs.
Number of LUTs:     3350
  1-LUT              220
  2-LUT              428
  3-LUT             1188
  4-LUT             1514
  with \SB_CARRY    (#0)  544
  with \SB_CARRY    (#1)  546

Combining LUTs.
Number of LUTs:     3286
  1-LUT              198
  2-LUT              388
  3-LUT             1148
  4-LUT             1552
  with \SB_CARRY    (#0)  544
  with \SB_CARRY    (#1)  546

Eliminated 0 LUTs.
Combined 64 LUTs.
<suppressed ~20745 debug messages>

8.45. Executing TECHMAP pass (map to technology primitives).

8.45.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$7295da7c5b19f528a428229f2570e0a23ad372af\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$d3f4c7e3f0239dbfbe248a0012ae40b9c40236fc\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$e4f0672b1b304c5f823c392f5c998838e860eb67\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$5ab8703b1aa62946296547e85dc0a19366704a74\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$d119410bab96963da0139669592048db2c09198b\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$e96de5e9fcce737e52eacf39c70c8f533dc27d63\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$5b94a2723bee3981c7b2df99b2c284c32a3097be\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$9583ab40db57ba76ead4c869be5b61dc3f252411\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$2902eb8ec3ca272968b5d8a7010e48f85069ed0f\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$6f7c21ad6bbbd9676bc178fdb8b88ada5043ba74\$lut for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$48e742702f055b463ab223112799b559534d85b4\$lut for cells of type $lut.
Using template $paramod$c045e54223c42444ef585f3b4941543c0ec8d58a\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$aabc38448f9289a9f09f7f433eb20ae11e3f6ed9\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$47cc0e8b2645814a515808371fb5dfded3ecad75\$lut for cells of type $lut.
Using template $paramod$2148a1805a1c3b3bf66b2f659d4ba0e8506227b2\$lut for cells of type $lut.
Using template $paramod$1aabab603c6e7aa38242c38bed10520239046947\$lut for cells of type $lut.
Using template $paramod$ee144edd7e4e2a1c095bdb84491744d6b6557171\$lut for cells of type $lut.
Using template $paramod$7c4b52c4b913ed269eb012bb5d2cc5f879234840\$lut for cells of type $lut.
Using template $paramod$c7643d93c6710d1f52fb7e7cb047a4e560bda904\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$7eb00dbc62aefa046649f6bb6faa1ef961d12e98\$lut for cells of type $lut.
Using template $paramod$f740ebdda65cd0b8323d705f16d6dbb0d2771805\$lut for cells of type $lut.
Using template $paramod$9d5b68c8da3340b77f1f858b0659185c5f0c4481\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$44322768708ea1617c4f8f4845eb883e6765da22\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$1b24100b2fd4c673c0fb73caa29fa7c0e2a28808\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$1cec58bfb33a7a51c359586aade8e947536c006e\$lut for cells of type $lut.
Using template $paramod$7f1d4d90e673bcbb2ff1336dbced583301ac2d11\$lut for cells of type $lut.
Using template $paramod$3525bc88021caeb0b6fb10b051fd947bd104e42a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$195157f0e3780d4d1885560d8e34f1523aa0cdca\$lut for cells of type $lut.
Using template $paramod$a54d8b8d2c90a828ee71c2d82e7e1612992a7ab8\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bc6dfbb9c5badfa11502af7a34b388438462c8f3\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$38debc9ecb856f8fdb72adb11bd5220839a653fd\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$3acd3251d3bb2479bf34295bb2ac13c217481a2e\$lut for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod$d7699f71278c20db2d510147e0fba5eaf3404f71\$lut for cells of type $lut.
Using template $paramod$1a64f21ea15b05b7fc930804a66f6689ebbd6394\$lut for cells of type $lut.
Using template $paramod$6a34cd5b50e324824168b4186d0b04ba5e83b039\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$96288e699aa5aef3f78113f3d61a81ccebbd5b8c\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$d4351ff5831f17027c376f95f6a20679eeba9d81\$lut for cells of type $lut.
Using template $paramod$1a3570080b1fea9cfcb3993f03ca97789c20379c\$lut for cells of type $lut.
Using template $paramod$7c83cdd3fab11059b2f4d686e682542bd63a212c\$lut for cells of type $lut.
Using template $paramod$c1199f8981eafbdb249b1b209ba0903e3842f9dd\$lut for cells of type $lut.
Using template $paramod$3f6b582516596b8d724aacd3bc2fee7037ba44df\$lut for cells of type $lut.
Using template $paramod$ad498e625474ac4669814135092d9e5967a65c4b\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$ec731ba0b03f9a8c2f9a148aad53e934d7e8d215\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$cb32992e51dcc00437a87053fcf4571f3e5aa6f1\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~5824 debug messages>
Removed 0 unused cells and 7230 unused wires.

8.46. Executing AUTONAME pass.
Renamed 158784 objects in module top (81 iterations).
<suppressed ~6886 debug messages>

8.47. Executing HIERARCHY pass (managing design hierarchy).

8.47.1. Analyzing design hierarchy..
Top module:  \top

8.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

8.48. Printing statistics.

=== top ===

   Number of wires:               2079
   Number of wire bits:           9434
   Number of public wires:        2079
   Number of public wire bits:    9434
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5183
     SB_CARRY                      770
     SB_DFF                        136
     SB_DFFE                       317
     SB_DFFESR                     340
     SB_DFFESS                      62
     SB_DFFN                         4
     SB_DFFSR                      252
     SB_DFFSS                        4
     SB_IO                           4
     SB_LUT4                      3286
     SB_RAM40_4K                     4
     SB_SPRAM256KA                   4

8.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

8.50. Executing JSON backend.

End of script. Logfile hash: bb2867f7ab, CPU: user 8.14s system 0.06s, MEM: 87.35 MB peak
Yosys 0.19+14 (git sha1 2326b9f90, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 24% 35x opt_expr (2 sec), 17% 1x abc (1 sec), ...
